/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IOKXDexRouter, IOKXDexRouterInterface } from "../IOKXDexRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fromToken",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "toToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadLine",
            type: "uint256",
          },
        ],
        internalType: "struct IOKXDexRouter.BaseRequest",
        name: "baseRequest",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "batchesAmount",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "mixAdapters",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "assetTo",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "rawData",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "extraData",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "fromToken",
            type: "uint256",
          },
        ],
        internalType: "struct IOKXDexRouter.RouterPath[][]",
        name: "batches",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pathIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "address",
            name: "fromToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "toToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromTokenAmountMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toTokenAmountMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadLine",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPushOrder",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extension",
            type: "bytes",
          },
        ],
        internalType: "struct IOKXDexRouter.PMMSwapRequest[]",
        name: "extraData",
        type: "tuple[]",
      },
    ],
    name: "smartSwapByOrderId",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orderId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fromToken",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "toToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadLine",
            type: "uint256",
          },
        ],
        internalType: "struct IOKXDexRouter.BaseRequest",
        name: "baseRequest",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "batchesAmount",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "address[]",
            name: "mixAdapters",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "assetTo",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "rawData",
            type: "uint256[]",
          },
          {
            internalType: "bytes[]",
            name: "extraData",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "fromToken",
            type: "uint256",
          },
        ],
        internalType: "struct IOKXDexRouter.RouterPath[][]",
        name: "batches",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pathIndex",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "payer",
            type: "address",
          },
          {
            internalType: "address",
            name: "fromToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "toToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromTokenAmountMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toTokenAmountMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "salt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadLine",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isPushOrder",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "extension",
            type: "bytes",
          },
        ],
        internalType: "struct IOKXDexRouter.PMMSwapRequest[]",
        name: "extraData",
        type: "tuple[]",
      },
    ],
    name: "smartSwapTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "receiver",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pools",
        type: "uint256[]",
      },
    ],
    name: "uniswapV3SwapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "srcToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "pools",
        type: "bytes32[]",
      },
    ],
    name: "unxswapByOrderId",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "srcToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReturn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "pools",
        type: "bytes32[]",
      },
    ],
    name: "unxswapTo",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

export class IOKXDexRouter__factory {
  static readonly abi = _abi;
  static createInterface(): IOKXDexRouterInterface {
    return new utils.Interface(_abi) as IOKXDexRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IOKXDexRouter {
    return new Contract(address, _abi, signerOrProvider) as IOKXDexRouter;
  }
}
