/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IPActionSwapYTV3Events,
  IPActionSwapYTV3EventsInterface,
} from "../IPActionSwapYTV3Events";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "netYtToAccount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "netSyToAccount",
        type: "int256",
      },
    ],
    name: "SwapYtAndSy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "netYtToAccount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "netTokenToAccount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "netSyInterm",
        type: "uint256",
      },
    ],
    name: "SwapYtAndToken",
    type: "event",
  },
];

export class IPActionSwapYTV3Events__factory {
  static readonly abi = _abi;
  static createInterface(): IPActionSwapYTV3EventsInterface {
    return new utils.Interface(_abi) as IPActionSwapYTV3EventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPActionSwapYTV3Events {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IPActionSwapYTV3Events;
  }
}
