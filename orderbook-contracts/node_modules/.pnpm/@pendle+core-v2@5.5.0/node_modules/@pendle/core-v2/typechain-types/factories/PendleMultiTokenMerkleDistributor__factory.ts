/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PendleMultiTokenMerkleDistributor,
  PendleMultiTokenMerkleDistributorInterface,
} from "../PendleMultiTokenMerkleDistributor";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ArrayLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMerkleProof",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "defaultTokenList",
        type: "address[]",
      },
    ],
    name: "SetDefaultTokenList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "SetMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountClaimable",
        type: "uint256",
      },
    ],
    name: "Verified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "totalAccrueds",
        type: "uint256[]",
      },
      {
        internalType: "bytes32[][]",
        name: "proofs",
        type: "bytes32[][]",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountOuts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "claimVerified",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountOuts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "verified",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "totalAccrueds",
        type: "uint256[]",
      },
      {
        internalType: "bytes32[][]",
        name: "proofs",
        type: "bytes32[][]",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountClaimable",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100ee565b600154600160a81b900460ff16156100905760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b600154600160a01b900460ff908116146100ec576001805460ff60a01b191660ff60a01b17905560405160ff81527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611d2d610125600039600081816103dc0152818161041c0152818161054f0152818161058f015261060b0152611d2d6000f3fe6080604052600436106100bc5760003560e01c8063078dfbe7146100c85780630c9cbf0e146100ea5780632eb4a7ab146101355780633659cfe61461014b57806348ac88bb1461016b5780634e71e0c8146101a35780634f1ef286146101b857806352d1902d146101cb5780635beb4f71146101e05780637cb647591461020d5780638129fc1c146102205780638da5cb5b14610235578063a01650821461026d578063bd4acae11461028d578063e30c3978146102ad57600080fd5b366100c357005b600080fd5b3480156100d457600080fd5b506100e86100e336600461162c565b6102cd565b005b3480156100f657600080fd5b50610122610105366004611675565b603360209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561014157600080fd5b5061012260325481565b34801561015757600080fd5b506100e86101663660046116a8565b6103d2565b34801561017757600080fd5b50610122610186366004611675565b603460209081526000928352604080842090915290825290205481565b3480156101af57600080fd5b506100e861049a565b6100e86101c6366004611709565b610545565b3480156101d757600080fd5b506101226105fe565b3480156101ec57600080fd5b506102006101fb366004611927565b6106ac565b60405161012c9190611a16565b6100e861021b366004611a5a565b61086d565b34801561022c57600080fd5b506100e86108ca565b34801561024157600080fd5b50600054610255906001600160a01b031681565b6040516001600160a01b03909116815260200161012c565b34801561027957600080fd5b50610200610288366004611927565b6109f8565b34801561029957600080fd5b506102006102a8366004611a73565b610c18565b3480156102b957600080fd5b50600154610255906001600160a01b031681565b6000546001600160a01b031633146103005760405162461bcd60e51b81526004016102f790611ac0565b60405180910390fd5b81156103b1576001600160a01b03831615158061031a5750805b61035e5760405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b60448201526064016102f7565b600080546040516001600160a01b0380871693921691600080516020611cb183398151915291a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055505050565b600180546001600160a01b0319166001600160a01b0385161790555b505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361041a5760405162461bcd60e51b81526004016102f790611af5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661044c610db7565b6001600160a01b0316146104725760405162461bcd60e51b81526004016102f790611b2f565b61047b81610dd3565b6040805160008082526020820190925261049791839190610dfd565b50565b6001546001600160a01b03163381146104f55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e657260448201526064016102f7565b600080546040516001600160a01b0380851693921691600080516020611cb183398151915291a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361058d5760405162461bcd60e51b81526004016102f790611af5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105bf610db7565b6001600160a01b0316146105e55760405162461bcd60e51b81526004016102f790611b2f565b6105ee82610dd3565b6105fa82826001610dfd565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106995760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b60648201526084016102f7565b50600080516020611c9183398151915290565b8251606090806001600160401b038111156106c9576106c96116c3565b6040519080825280602002602001820160405280156106f2578160200160208202803683370190505b50915060005b8181101561086357600080600088848151811061071757610717611b69565b602002602001015188858151811061073157610731611b69565b602002602001015188868151811061074b5761074b611b69565b6020026020010151925092509250610765838b8484610f68565b6107825760405163582f497d60e11b815260040160405180910390fd5b6001600160a01b038084166000908152603360209081526040808320938e16835292905220546107b29083611b7f565b8685815181106107c4576107c4611b69565b6020908102919091018101919091526001600160a01b038085166000818152603484526040808220938f16808352939094529290922084905587519091907f7216f374777f87941484a5a6a408292cb809eb2ec919b114c1b4fbfb11137f3c9089908890811061083657610836611b69565b602002602001015160405161084d91815260200190565b60405180910390a35050508060010190506106f8565b5050949350505050565b6000546001600160a01b031633146108975760405162461bcd60e51b81526004016102f790611ac0565b603281905560405181907f914960aef5e033ce5cae8a7992d4b7a6f0f9741227b66acb67c605b7019f8a4690600090a250565b600154600160a81b900460ff16158080156108f0575060018054600160a01b900460ff16105b8061091757506108ff30610fc9565b158015610917575060018054600160a01b900460ff16145b61097a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102f7565b6001805460ff60a01b1916600160a01b17905580156109a7576001805460ff60a81b1916600160a81b1790555b6109af610fd8565b8015610497576001805460ff60a81b191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b606082518451141580610a0d57508151845114155b15610a2b5760405163512509d360e11b815260040160405180910390fd5b83513390806001600160401b03811115610a4757610a476116c3565b604051908082528060200260200182016040528015610a70578160200160208202803683370190505b50925060005b81811015610c0d576000806000898481518110610a9557610a95611b69565b6020026020010151898581518110610aaf57610aaf611b69565b6020026020010151898681518110610ac957610ac9611b69565b6020026020010151925092509250610ae383878484610f68565b610b005760405163582f497d60e11b815260040160405180910390fd5b6001600160a01b038084166000908152603360209081526040808320938a1683529290522054610b309083611b7f565b878581518110610b4257610b42611b69565b6020908102919091018101919091526001600160a01b038085166000908152603383526040808220928a1682529190925290208290558651610ba19084908d908a9088908110610b9457610b94611b69565b6020026020010151611059565b8a6001600160a01b0316866001600160a01b0316846001600160a01b0316600080516020611c518339815191528a8881518110610be057610be0611b69565b6020026020010151604051610bf791815260200190565b60405180910390a4505050806001019050610a76565b505050949350505050565b80516060903390806001600160401b03811115610c3757610c376116c3565b604051908082528060200260200182016040528015610c60578160200160208202803683370190505b50925060005b81811015610dae576000858281518110610c8257610c82611b69565b6020908102919091018101516001600160a01b038082166000818152603485526040808220938a1680835293865280822054928252603386528082209382529290945292205490925080821115610da057610cdd8183611b7f565b878581518110610cef57610cef611b69565b6020908102919091018101919091526001600160a01b038085166000908152603383526040808220928a1682529190925290208290558651610d419084908b908a9088908110610b9457610b94611b69565b886001600160a01b0316866001600160a01b0316846001600160a01b0316600080516020611c518339815191528a8881518110610d8057610d80611b69565b6020026020010151604051610d9791815260200190565b60405180910390a45b505050806001019050610c66565b50505092915050565b600080516020611c91833981519152546001600160a01b031690565b6000546001600160a01b031633146104975760405162461bcd60e51b81526004016102f790611ac0565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610e30576103cd83611123565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e8a575060408051601f3d908101601f19168201909252610e8791810190611ba0565b60015b610eed5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016102f7565b600080516020611c918339815191528114610f5c5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016102f7565b506103cd8383836111bd565b6040516001600160601b0319606086811b8216602084015285901b166034820152604881018390526000908190606801604051602081830303815290604052805190602001209050610fbd83603254836111e2565b9150505b949350505050565b6001600160a01b03163b151590565b600154600160a81b900460ff166110455760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016102f7565b600080546001600160a01b03191633179055565b8060000361106657505050565b6001600160a01b03831661110f576000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146110c1576040519150601f19603f3d011682016040523d82523d6000602084013e6110c6565b606091505b50509050806111095760405162461bcd60e51b815260206004820152600f60248201526e195d1a081cd95b990819985a5b1959608a1b60448201526064016102f7565b50505050565b6103cd6001600160a01b03841683836111f8565b61112c81610fc9565b61118e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102f7565b600080516020611c9183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6111c68361124a565b6000825111806111d35750805b156103cd57611109838361128a565b6000826111ef85846112b8565b14949350505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526103cd9084906112fb565b61125381611123565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606112af8383604051806060016040528060278152602001611cd1602791396113d0565b90505b92915050565b600081815b84518110156112f3576112e9828683815181106112dc576112dc611b69565b6020026020010151611448565b91506001016112bd565b509392505050565b6000611350826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114779092919063ffffffff16565b90508051600014806113715750808060200190518101906113719190611bb9565b6103cd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102f7565b6060600080856001600160a01b0316856040516113ed9190611c01565b600060405180830381855af49150503d8060008114611428576040519150601f19603f3d011682016040523d82523d6000602084013e61142d565b606091505b509150915061143e86838387611486565b9695505050505050565b60008183106114645760008281526020849052604090206112af565b60008381526020839052604090206112af565b6060610fc184846000856114fd565b606083156114f35782516000036114ec576114a085610fc9565b6114ec5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102f7565b5081610fc1565b610fc183836115d8565b60608247101561155e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102f7565b600080866001600160a01b0316858760405161157a9190611c01565b60006040518083038185875af1925050503d80600081146115b7576040519150601f19603f3d011682016040523d82523d6000602084013e6115bc565b606091505b50915091506115cd87838387611486565b979650505050505050565b8151156115e85781518083602001fd5b8060405162461bcd60e51b81526004016102f79190611c1d565b80356001600160a01b038116811461161957600080fd5b919050565b801515811461049757600080fd5b60008060006060848603121561164157600080fd5b61164a84611602565b9250602084013561165a8161161e565b9150604084013561166a8161161e565b809150509250925092565b6000806040838503121561168857600080fd5b61169183611602565b915061169f60208401611602565b90509250929050565b6000602082840312156116ba57600080fd5b6112af82611602565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611701576117016116c3565b604052919050565b6000806040838503121561171c57600080fd5b61172583611602565b91506020838101356001600160401b038082111561174257600080fd5b818601915086601f83011261175657600080fd5b813581811115611768576117686116c3565b61177a601f8201601f191685016116d9565b9150808252878482850101111561179057600080fd5b80848401858401376000848284010152508093505050509250929050565b60006001600160401b038211156117c7576117c76116c3565b5060051b60200190565b600082601f8301126117e257600080fd5b813560206117f76117f2836117ae565b6116d9565b8083825260208201915060208460051b87010193508684111561181957600080fd5b602086015b8481101561183c5761182f81611602565b835291830191830161181e565b509695505050505050565b600082601f83011261185857600080fd5b813560206118686117f2836117ae565b828152600592831b850182019282820191908785111561188757600080fd5b8387015b8581101561191a5780356001600160401b038111156118aa5760008081fd5b8801603f81018a136118bc5760008081fd5b8581013560406118ce6117f2836117ae565b82815291851b8301810191888101908d8411156118eb5760008081fd5b938201935b83851015611909578435825293890193908901906118f0565b88525050509385019350840161188b565b5090979650505050505050565b6000806000806080858703121561193d57600080fd5b61194685611602565b93506020858101356001600160401b038082111561196357600080fd5b61196f89838a016117d1565b9550604088013591508082111561198557600080fd5b818801915088601f83011261199957600080fd5b81356119a76117f2826117ae565b81815260059190911b8301840190848101908b8311156119c657600080fd5b938501935b828510156119e4578435825293850193908501906119cb565b9650505060608801359250808311156119fc57600080fd5b5050611a0a87828801611847565b91505092959194509250565b6020808252825182820181905260009190848201906040850190845b81811015611a4e57835183529284019291840191600101611a32565b50909695505050505050565b600060208284031215611a6c57600080fd5b5035919050565b60008060408385031215611a8657600080fd5b611a8f83611602565b915060208301356001600160401b03811115611aaa57600080fd5b611ab6858286016117d1565b9150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602c90820152600080516020611c7183398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c90820152600080516020611c7183398151915260408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b818103818111156112b257634e487b7160e01b600052601160045260246000fd5b600060208284031215611bb257600080fd5b5051919050565b600060208284031215611bcb57600080fd5b8151611bd68161161e565b9392505050565b60005b83811015611bf8578181015183820152602001611be0565b50506000910152565b60008251611c13818460208701611bdd565b9190910192915050565b6020815260008251806020840152611c3c816040850160208701611bdd565b601f01601f1916919091016040019291505056fe913c992353dc81b7a8ba31496c484e9b6306bd2f6c509a649a38fdf5e1c953b246756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220d9b59300d2d7cd6ff1115505e61740162d21b92f48a99b21083cbe95fa2f1c0e64736f6c63430008170033";

type PendleMultiTokenMerkleDistributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PendleMultiTokenMerkleDistributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PendleMultiTokenMerkleDistributor__factory extends ContractFactory {
  constructor(...args: PendleMultiTokenMerkleDistributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PendleMultiTokenMerkleDistributor";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PendleMultiTokenMerkleDistributor> {
    return super.deploy(
      overrides || {}
    ) as Promise<PendleMultiTokenMerkleDistributor>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PendleMultiTokenMerkleDistributor {
    return super.attach(address) as PendleMultiTokenMerkleDistributor;
  }
  connect(signer: Signer): PendleMultiTokenMerkleDistributor__factory {
    return super.connect(signer) as PendleMultiTokenMerkleDistributor__factory;
  }
  static readonly contractName: "PendleMultiTokenMerkleDistributor";
  public readonly contractName: "PendleMultiTokenMerkleDistributor";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PendleMultiTokenMerkleDistributorInterface {
    return new utils.Interface(
      _abi
    ) as PendleMultiTokenMerkleDistributorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PendleMultiTokenMerkleDistributor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PendleMultiTokenMerkleDistributor;
  }
}
