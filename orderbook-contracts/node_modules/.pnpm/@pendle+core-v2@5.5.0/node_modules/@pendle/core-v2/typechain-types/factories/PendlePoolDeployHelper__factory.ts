/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PendlePoolDeployHelper,
  PendlePoolDeployHelperInterface,
} from "../PendlePoolDeployHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_yieldContractFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "SY",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "PT",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "YT",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "expiry",
            type: "uint32",
          },
          {
            internalType: "uint80",
            name: "lnFeeRateRoot",
            type: "uint80",
          },
          {
            internalType: "int256",
            name: "scalarRoot",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "initialRateAnchor",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "doCacheIndexSameBlock",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct PendlePoolDeployHelper.PoolDeploymentParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "MarketDeployment",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "SY",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "expiry",
            type: "uint32",
          },
          {
            internalType: "uint80",
            name: "lnFeeRateRoot",
            type: "uint80",
          },
          {
            internalType: "int256",
            name: "scalarRoot",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "initialRateAnchor",
            type: "int256",
          },
          {
            internalType: "bool",
            name: "doCacheIndexSameBlock",
            type: "bool",
          },
        ],
        internalType: "struct PendlePoolDeployHelper.PoolDeploymentParams",
        name: "params",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "tokenToSeedLiqudity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountToSeed",
        type: "uint256",
      },
    ],
    name: "deploy5115MarketAndSeedLiquidity",
    outputs: [
      {
        internalType: "address",
        name: "PT",
        type: "address",
      },
      {
        internalType: "address",
        name: "YT",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "marketFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oldMarket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountLp",
        type: "uint256",
      },
      {
        internalType: "uint80",
        name: "lnFeeRateRoot",
        type: "uint80",
      },
      {
        internalType: "int256",
        name: "scalarRoot",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "initialRateAnchor",
        type: "int256",
      },
    ],
    name: "redeployMarket",
    outputs: [
      {
        internalType: "address",
        name: "newMarket",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenToSeedLiqudity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountToSeed",
        type: "uint256",
      },
    ],
    name: "seedLiquidity",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldContractFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b506040516200165b3803806200165b83398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051611534620001276000396000818160770152818161023e0152610529015260008181610125015261049101526000818161016e0152818161065501528181610698015281816106c20152818161071f01528181610851015261090e01526115346000f3fe6080604052600436106100595760003560e01c806306ae7095146100655780634ff780e1146100b6578063705d3a94146100f357806387a409a2146101135780638a22ba0b14610147578063f887ea401461015c57600080fd5b3661006057005b600080fd5b34801561007157600080fd5b506100997f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c96100c4366004611054565b610190565b604080516001600160a01b03948516815292841660208401529216918101919091526060016100ad565b3480156100ff57600080fd5b5061009961010e366004611121565b6101be565b34801561011f57600080fd5b506100997f000000000000000000000000000000000000000000000000000000000000000081565b61015a610155366004611171565b6103cc565b005b34801561016857600080fd5b506100997f000000000000000000000000000000000000000000000000000000000000000081565b600080600061019f878761044f565b919450925090506101b4818885858989610644565b9450945094915050565b600080866001600160a01b0316632c8ce6bc6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156101ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022391906111b2565b5060405163f661cf6b60e01b81529092506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016915063f661cf6b9061027a908490889088908b906004016111ff565b6020604051808303816000875af1158015610299573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bd919061122e565b91506102cb873389896109de565b600080886001600160a01b031663f6b911bc85868b6040518463ffffffff1660e01b81526004016102fe93929190611252565b60408051808303816000875af115801561031c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103409190611276565b604051630ab714fb60e11b8152336004820152602481018390526044810182905291935091506001600160a01b0385169063156e29f6906064016060604051808303816000875af1158015610399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bd919061129a565b50505050505095945050505050565b6000806000856001600160a01b0316632c8ce6bc6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561040f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043391906111b2565b925092509250610447868484848989610644565b505050505050565b80516080820151604051637145345b60e11b81526001600160a01b03858116600483015263ffffffff90931660248201529015156044820152600091829182917f0000000000000000000000000000000000000000000000000000000000000000169063e28a68b69060640160408051808303816000875af11580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd91906112c8565b60408087015160608801516020890151925163f661cf6b60e01b81529497509295506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169363f661cf6b9361055f938993926004016111ff565b6020604051808303816000875af115801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a2919061122e565b604080516001600160a01b03888116825286811660208084019190915286821683850152885163ffffffff16606080850191909152908901516001600160501b03166080808501919091529389015160a084015288015160c083015291870151151560e08201529192508216907f64548e98bf851c530285483e1870abe9e41d3a7060292802eb888542488f1839906101000160405180910390a29250925092565b61064f8233836109ff565b610679827f0000000000000000000000000000000000000000000000000000000000000000610a70565b846001600160a01b0316826001600160a01b0316146106bc576106bc857f0000000000000000000000000000000000000000000000000000000000000000610a70565b6106e6847f0000000000000000000000000000000000000000000000000000000000000000610a70565b6000856001600160a01b0316836001600160a01b0316146108425760006001600160a01b0384161561071957600061071b565b825b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e071dc682308a60006040518060a001604052808b6001600160a01b031681526020018a81526020018b6001600160a01b0316815260200160006001600160a01b0316815260200160405180608001604052806000600a8111156107ae576107ae611302565b815260006020808301829052604080518381529182018152808401919091526060909201529152516001600160e01b031960e088901b1681526107f79493929190600401611368565b60206040518083038185885af1158015610815573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061083a9190611430565b915050610845565b50805b60006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016631a8631b2308761088360028761145f565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152600060648201526084016020604051808303816000875af11580156108de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109029190611430565b90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166397ee279e338a61094060028761145f565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606481018490526000608482015260a4016060604051808303816000875af11580156109a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c6919061129a565b5050506109d4853383610b34565b5050505050505050565b80156109f9576109f96001600160a01b038516848484610bf8565b50505050565b6001600160a01b038316610a5557803414610a505760405162461bcd60e51b815260206004820152600c60248201526b0cae8d040dad2e6dac2e8c6d60a31b60448201526064015b60405180910390fd5b505050565b8015610a5057610a506001600160a01b038416833084610bf8565b6001600160a01b038216610a82575050565b610a9460026001600160601b03611473565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526001600160601b03929092169184169063dd62ed3e90604401602060405180830381865afa158015610aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b119190611430565b1015610b3057610b2382826000610c50565b610b308282600019610c50565b5050565b80600003610b4157505050565b6001600160a01b038316610be4576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b9c576040519150601f19603f3d011682016040523d82523d6000602084013e610ba1565b606091505b50509050806109f95760405162461bcd60e51b815260206004820152600f60248201526e195d1a081cd95b990819985a5b1959608a1b6044820152606401610a47565b610a506001600160a01b0384168383610d64565b6109f9846323b872dd60e01b858585604051602401610c1993929190611252565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610d83565b600080846001600160a01b031663095ea7b360e01b8585604051602401610c78929190611499565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610cb691906114b2565b6000604051808303816000865af19150503d8060008114610cf3576040519150601f19603f3d011682016040523d82523d6000602084013e610cf8565b606091505b5091509150818015610d22575080511580610d22575080806020019051810190610d2291906114ce565b610d5d5760405162461bcd60e51b815260206004820152600c60248201526b5361666520417070726f766560a01b6044820152606401610a47565b5050505050565b610a508363a9059cbb60e01b8484604051602401610c19929190611499565b6000610dd8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e589092919063ffffffff16565b9050805160001480610df9575080806020019051810190610df991906114ce565b610a505760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610a47565b6060610e678484600085610e6f565b949350505050565b606082471015610ed05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610a47565b600080866001600160a01b03168587604051610eec91906114b2565b60006040518083038185875af1925050503d8060008114610f29576040519150601f19603f3d011682016040523d82523d6000602084013e610f2e565b606091505b5091509150610f3f87838387610f4a565b979650505050505050565b60608315610fb9578251600003610fb2576001600160a01b0385163b610fb25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610a47565b5081610e67565b610e678383815115610fce5781518083602001fd5b8060405162461bcd60e51b8152600401610a4791906114eb565b6001600160a01b0381168114610ffd57600080fd5b50565b803561100b81610fe8565b919050565b803563ffffffff8116811461100b57600080fd5b80356001600160501b038116811461100b57600080fd5b8015158114610ffd57600080fd5b803561100b8161103b565b60008060008084860361010081121561106c57600080fd5b853561107781610fe8565b945060a0601f198201121561108b57600080fd5b5060405160a081016001600160401b03811182821017156110bc57634e487b7160e01b600052604160045260246000fd5b6040526110cb60208701611010565b81526110d960408701611024565b602082015260608601356040820152608086013560608201526110fe60a08701611049565b6080820152925061111160c08601611000565b9396929550929360e00135925050565b600080600080600060a0868803121561113957600080fd5b853561114481610fe8565b94506020860135935061115960408701611024565b94979396509394606081013594506080013592915050565b60008060006060848603121561118657600080fd5b833561119181610fe8565b925060208401356111a181610fe8565b929592945050506040919091013590565b6000806000606084860312156111c757600080fd5b83516111d281610fe8565b60208501519093506111e381610fe8565b60408501519092506111f481610fe8565b809150509250925092565b6001600160a01b03949094168452602084019290925260408301526001600160501b0316606082015260800190565b60006020828403121561124057600080fd5b815161124b81610fe8565b9392505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000806040838503121561128957600080fd5b505080516020909101519092909150565b6000806000606084860312156112af57600080fd5b8351925060208401519150604084015190509250925092565b600080604083850312156112db57600080fd5b82516112e681610fe8565b60208401519092506112f781610fe8565b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b60005b8381101561133357818101518382015260200161131b565b50506000910152565b60008151808452611354816020860160208601611318565b601f01601f19169290920160200192915050565b600060018060a01b038087168352808616602084015284604084015260806060840152808451166080840152602084015160a08401528060408501511660c08401528060608501511660e0840152608084015160a06101008501528051600b81106113e357634e487b7160e01b600052602160045260246000fd5b610120850152602081015190911661014084015260408101516080610160850152906114136101a085018361133c565b915060608101511515610180850152508091505095945050505050565b60006020828403121561144257600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b60008261146e5761146e611449565b500490565b60006001600160601b038381168061148d5761148d611449565b92169190910492915050565b6001600160a01b03929092168252602082015260400190565b600082516114c4818460208701611318565b9190910192915050565b6000602082840312156114e057600080fd5b815161124b8161103b565b60208152600061124b602083018461133c56fea2646970667358221220cb565693669016ca180ac078fc1af63ce37b048481287b86001774f2968fecf664736f6c63430008170033";

type PendlePoolDeployHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PendlePoolDeployHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PendlePoolDeployHelper__factory extends ContractFactory {
  constructor(...args: PendlePoolDeployHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PendlePoolDeployHelper";
  }

  deploy(
    _router: string,
    _yieldContractFactory: string,
    _marketFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PendlePoolDeployHelper> {
    return super.deploy(
      _router,
      _yieldContractFactory,
      _marketFactory,
      overrides || {}
    ) as Promise<PendlePoolDeployHelper>;
  }
  getDeployTransaction(
    _router: string,
    _yieldContractFactory: string,
    _marketFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _yieldContractFactory,
      _marketFactory,
      overrides || {}
    );
  }
  attach(address: string): PendlePoolDeployHelper {
    return super.attach(address) as PendlePoolDeployHelper;
  }
  connect(signer: Signer): PendlePoolDeployHelper__factory {
    return super.connect(signer) as PendlePoolDeployHelper__factory;
  }
  static readonly contractName: "PendlePoolDeployHelper";
  public readonly contractName: "PendlePoolDeployHelper";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PendlePoolDeployHelperInterface {
    return new utils.Interface(_abi) as PendlePoolDeployHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PendlePoolDeployHelper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PendlePoolDeployHelper;
  }
}
