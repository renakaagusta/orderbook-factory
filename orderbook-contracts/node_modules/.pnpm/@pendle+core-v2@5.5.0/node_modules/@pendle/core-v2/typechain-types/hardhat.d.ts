/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AggregatorInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorInterface__factory>;
    getContractFactory(
      name: "AggregatorV2V3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV2V3Interface__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "AccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IAccessControlUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControlUpgradeable__factory>;
    getContractFactory(
      name: "IERC5267Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267Upgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Upgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "IERC1967",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1967__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrings__factory>;
    getContractFactory(
      name: "PendleERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleERC20__factory>;
    getContractFactory(
      name: "PendleERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleERC20Permit__factory>;
    getContractFactory(
      name: "PendleERC20PermitUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleERC20PermitUpg__factory>;
    getContractFactory(
      name: "PendleERC20Upg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleERC20Upg__factory>;
    getContractFactory(
      name: "BoringOwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringOwnableUpgradeable__factory>;
    getContractFactory(
      name: "BoringOwnableUpgradeableData",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringOwnableUpgradeableData__factory>;
    getContractFactory(
      name: "Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Errors__factory>;
    getContractFactory(
      name: "OracleLib",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleLib__factory>;
    getContractFactory(
      name: "PendleGauge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleGauge__factory>;
    getContractFactory(
      name: "PendleMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMarket__factory>;
    getContractFactory(
      name: "PendleMarketFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMarketFactory__factory>;
    getContractFactory(
      name: "PendleMarketFactoryV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMarketFactoryV3__factory>;
    getContractFactory(
      name: "PendleMarketV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMarketV3__factory>;
    getContractFactory(
      name: "RewardManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardManager__factory>;
    getContractFactory(
      name: "RewardManagerAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardManagerAbstract__factory>;
    getContractFactory(
      name: "InterestManagerYT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestManagerYT__factory>;
    getContractFactory(
      name: "PendlePrincipalToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePrincipalToken__factory>;
    getContractFactory(
      name: "PendleYieldContractFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleYieldContractFactory__factory>;
    getContractFactory(
      name: "PendleYieldToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleYieldToken__factory>;
    getContractFactory(
      name: "IAddressProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAddressProvider__factory>;
    getContractFactory(
      name: "ILayerZeroEndpoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroEndpoint__factory>;
    getContractFactory(
      name: "ILayerZeroReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILayerZeroReceiver__factory>;
    getContractFactory(
      name: "IPActionAddRemoveLiqV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionAddRemoveLiqV3__factory>;
    getContractFactory(
      name: "IPActionCallbackV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionCallbackV3__factory>;
    getContractFactory(
      name: "IPActionInfoStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionInfoStatic__factory>;
    getContractFactory(
      name: "IPActionMarketAuxStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionMarketAuxStatic__factory>;
    getContractFactory(
      name: "IPActionMarketCoreStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionMarketCoreStatic__factory>;
    getContractFactory(
      name: "IPActionMintRedeemStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionMintRedeemStatic__factory>;
    getContractFactory(
      name: "IPActionMiscV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionMiscV3__factory>;
    getContractFactory(
      name: "IPActionSimple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionSimple__factory>;
    getContractFactory(
      name: "IPActionStorageStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionStorageStatic__factory>;
    getContractFactory(
      name: "IPActionStorageV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionStorageV4__factory>;
    getContractFactory(
      name: "IPActionSwapPTV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionSwapPTV3__factory>;
    getContractFactory(
      name: "IPActionSwapYTV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionSwapYTV3__factory>;
    getContractFactory(
      name: "IPActionVePendleStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionVePendleStatic__factory>;
    getContractFactory(
      name: "IPAllActionV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPAllActionV3__factory>;
    getContractFactory(
      name: "IPActionAddRemoveLiqV3Events",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionAddRemoveLiqV3Events__factory>;
    getContractFactory(
      name: "IPActionMiscV3Events",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionMiscV3Events__factory>;
    getContractFactory(
      name: "IPActionStorageEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionStorageEvents__factory>;
    getContractFactory(
      name: "IPActionSwapPTV3Events",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionSwapPTV3Events__factory>;
    getContractFactory(
      name: "IPActionSwapYTV3Events",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPActionSwapYTV3Events__factory>;
    getContractFactory(
      name: "IPAllEventsV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPAllEventsV3__factory>;
    getContractFactory(
      name: "IPChainlinkOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPChainlinkOracle__factory>;
    getContractFactory(
      name: "IPChainlinkOracleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPChainlinkOracleFactory__factory>;
    getContractFactory(
      name: "IPChainlinkOracleWithQuote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPChainlinkOracleWithQuote__factory>;
    getContractFactory(
      name: "IPExchangeRateOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPExchangeRateOracle__factory>;
    getContractFactory(
      name: "IPFeeDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPFeeDistributor__factory>;
    getContractFactory(
      name: "IPFeeDistributorV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPFeeDistributorV2__factory>;
    getContractFactory(
      name: "IPGauge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPGauge__factory>;
    getContractFactory(
      name: "IPGaugeController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPGaugeController__factory>;
    getContractFactory(
      name: "IPGaugeControllerMainchain",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPGaugeControllerMainchain__factory>;
    getContractFactory(
      name: "IPGovernanceProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPGovernanceProxy__factory>;
    getContractFactory(
      name: "IPInterestManagerYT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPInterestManagerYT__factory>;
    getContractFactory(
      name: "IPInterestManagerYTV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPInterestManagerYTV2__factory>;
    getContractFactory(
      name: "IPLimitRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPLimitRouter__factory>;
    getContractFactory(
      name: "IPLimitRouterCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPLimitRouterCallback__factory>;
    getContractFactory(
      name: "IPMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMarket__factory>;
    getContractFactory(
      name: "IPMarketFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMarketFactory__factory>;
    getContractFactory(
      name: "IPMarketFactoryV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMarketFactoryV3__factory>;
    getContractFactory(
      name: "IPMarketSwapCallback",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMarketSwapCallback__factory>;
    getContractFactory(
      name: "IPMarketV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMarketV3__factory>;
    getContractFactory(
      name: "IPMerkleDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMerkleDistributor__factory>;
    getContractFactory(
      name: "IPMiniDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMiniDiamond__factory>;
    getContractFactory(
      name: "IPMsgReceiverApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMsgReceiverApp__factory>;
    getContractFactory(
      name: "IPMsgSendEndpoint",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMsgSendEndpoint__factory>;
    getContractFactory(
      name: "IPMultiTokenMerkleDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPMultiTokenMerkleDistributor__factory>;
    getContractFactory(
      name: "IPOffchainStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPOffchainStorage__factory>;
    getContractFactory(
      name: "IPOracleForSy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPOracleForSy__factory>;
    getContractFactory(
      name: "IPPausingInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPPausingInterface__factory>;
    getContractFactory(
      name: "IPPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPPriceFeed__factory>;
    getContractFactory(
      name: "IPPrincipalToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPPrincipalToken__factory>;
    getContractFactory(
      name: "IPPYLpOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPPYLpOracle__factory>;
    getContractFactory(
      name: "IPReflector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPReflector__factory>;
    getContractFactory(
      name: "IPRouterStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPRouterStatic__factory>;
    getContractFactory(
      name: "IPTokenWithSupplyCap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPTokenWithSupplyCap__factory>;
    getContractFactory(
      name: "IPVeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPVeToken__factory>;
    getContractFactory(
      name: "IPVotingController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPVotingController__factory>;
    getContractFactory(
      name: "IPVotingEscrowMainchain",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPVotingEscrowMainchain__factory>;
    getContractFactory(
      name: "IPYieldContractFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPYieldContractFactory__factory>;
    getContractFactory(
      name: "IPYieldToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPYieldToken__factory>;
    getContractFactory(
      name: "IPYieldTokenV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPYieldTokenV2__factory>;
    getContractFactory(
      name: "IRedstonePriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRedstonePriceFeed__factory>;
    getContractFactory(
      name: "IRewardManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardManager__factory>;
    getContractFactory(
      name: "IStandardizedYield",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStandardizedYield__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "IWstETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWstETH__factory>;
    getContractFactory(
      name: "NonceManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NonceManager__factory>;
    getContractFactory(
      name: "LimitRouterBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LimitRouterBase__factory>;
    getContractFactory(
      name: "PendleLimitRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleLimitRouter__factory>;
    getContractFactory(
      name: "PendleMsgReceiveEndpointUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMsgReceiveEndpointUpg__factory>;
    getContractFactory(
      name: "PendleMsgReceiverAppUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMsgReceiverAppUpg__factory>;
    getContractFactory(
      name: "PendleMsgSendEndpointUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMsgSendEndpointUpg__factory>;
    getContractFactory(
      name: "PendleMsgSenderAppUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMsgSenderAppUpg__factory>;
    getContractFactory(
      name: "PendleGaugeControllerBaseUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleGaugeControllerBaseUpg__factory>;
    getContractFactory(
      name: "PendleGaugeControllerMainchainUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleGaugeControllerMainchainUpg__factory>;
    getContractFactory(
      name: "PendleGaugeControllerSidechainUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleGaugeControllerSidechainUpg__factory>;
    getContractFactory(
      name: "PendleMerkleDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMerkleDistributor__factory>;
    getContractFactory(
      name: "PendleMultiTokenMerkleDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMultiTokenMerkleDistributor__factory>;
    getContractFactory(
      name: "PendleFeeDistributor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleFeeDistributor__factory>;
    getContractFactory(
      name: "PendleFeeDistributorV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleFeeDistributorV2__factory>;
    getContractFactory(
      name: "PendleVotingControllerUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleVotingControllerUpg__factory>;
    getContractFactory(
      name: "VotingControllerStorageUpg",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingControllerStorageUpg__factory>;
    getContractFactory(
      name: "VotingEscrowPendleMainchain",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingEscrowPendleMainchain__factory>;
    getContractFactory(
      name: "VotingEscrowPendleSidechain",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingEscrowPendleSidechain__factory>;
    getContractFactory(
      name: "VotingEscrowTokenBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingEscrowTokenBase__factory>;
    getContractFactory(
      name: "AddressProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AddressProvider__factory>;
    getContractFactory(
      name: "AutomateReady",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AutomateReady__factory>;
    getContractFactory(
      name: "IAutomate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAutomate__factory>;
    getContractFactory(
      name: "IOpsProxyFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOpsProxyFactory__factory>;
    getContractFactory(
      name: "ITaskTreasuryUpgradable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITaskTreasuryUpgradable__factory>;
    getContractFactory(
      name: "BaseSplitCodeFactoryContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseSplitCodeFactoryContract__factory>;
    getContractFactory(
      name: "Broadcaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Broadcaster__factory>;
    getContractFactory(
      name: "EmptyUUPS",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EmptyUUPS__factory>;
    getContractFactory(
      name: "SDKErrorsDirectory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SDKErrorsDirectory__factory>;
    getContractFactory(
      name: "LegacyNFTHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LegacyNFTHelper__factory>;
    getContractFactory(
      name: "StarNFTV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StarNFTV1__factory>;
    getContractFactory(
      name: "LimitBackendHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LimitBackendHelper__factory>;
    getContractFactory(
      name: "Multicall2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall2__factory>;
    getContractFactory(
      name: "PendleExchangeRateOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleExchangeRateOracle__factory>;
    getContractFactory(
      name: "PendleGovernanceProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleGovernanceProxy__factory>;
    getContractFactory(
      name: "PendleMulticallV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMulticallV1__factory>;
    getContractFactory(
      name: "PendleMulticallV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleMulticallV2__factory>;
    getContractFactory(
      name: "PendleOffchainStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleOffchainStorage__factory>;
    getContractFactory(
      name: "PendlePoolDeployHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePoolDeployHelper__factory>;
    getContractFactory(
      name: "PendleWstETHPriceFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleWstETHPriceFeed__factory>;
    getContractFactory(
      name: "ActionInfoStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionInfoStatic__factory>;
    getContractFactory(
      name: "ActionMarketAuxStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionMarketAuxStatic__factory>;
    getContractFactory(
      name: "ActionMarketCoreStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionMarketCoreStatic__factory>;
    getContractFactory(
      name: "ActionMintRedeemStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionMintRedeemStatic__factory>;
    getContractFactory(
      name: "ActionStorageStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionStorageStatic__factory>;
    getContractFactory(
      name: "ActionVePendleStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionVePendleStatic__factory>;
    getContractFactory(
      name: "PendleRouterStatic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleRouterStatic__factory>;
    getContractFactory(
      name: "SimulateHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SimulateHelper__factory>;
    getContractFactory(
      name: "IPossibleSupplyCapInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPossibleSupplyCapInterface__factory>;
    getContractFactory(
      name: "SupplyCapReader",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SupplyCapReader__factory>;
    getContractFactory(
      name: "PendleBoringOneracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleBoringOneracle__factory>;
    getContractFactory(
      name: "PendleBoringSolvBTCOneracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleBoringSolvBTCOneracle__factory>;
    getContractFactory(
      name: "PendleRedStoneRateOracleAdapter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleRedStoneRateOracleAdapter__factory>;
    getContractFactory(
      name: "PendleSparkLinearDiscountOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleSparkLinearDiscountOracle__factory>;
    getContractFactory(
      name: "PTExpiry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PTExpiry__factory>;
    getContractFactory(
      name: "PendleSparkLinearDiscountOracleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleSparkLinearDiscountOracleFactory__factory>;
    getContractFactory(
      name: "PendleChainlinkOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleChainlinkOracle__factory>;
    getContractFactory(
      name: "PendleChainlinkOracleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleChainlinkOracleFactory__factory>;
    getContractFactory(
      name: "PendleChainlinkOracleWithQuote",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleChainlinkOracleWithQuote__factory>;
    getContractFactory(
      name: "PendlePYLpOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendlePYLpOracle__factory>;
    getContractFactory(
      name: "BoringPYUsdChainlinkAssetOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringPYUsdChainlinkAssetOracle__factory>;
    getContractFactory(
      name: "BoringPYUsdChainlinkSYOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoringPYUsdChainlinkSYOracle__factory>;
    getContractFactory(
      name: "ActionAddRemoveLiqV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionAddRemoveLiqV3__factory>;
    getContractFactory(
      name: "ActionCallbackV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionCallbackV3__factory>;
    getContractFactory(
      name: "ActionMiscV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionMiscV3__factory>;
    getContractFactory(
      name: "ActionSimple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionSimple__factory>;
    getContractFactory(
      name: "ActionStorageV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionStorageV4__factory>;
    getContractFactory(
      name: "ActionSwapPTV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionSwapPTV3__factory>;
    getContractFactory(
      name: "ActionSwapYTV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ActionSwapYTV3__factory>;
    getContractFactory(
      name: "PendleRouterV4",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleRouterV4__factory>;
    getContractFactory(
      name: "Reflector",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Reflector__factory>;
    getContractFactory(
      name: "IPSwapAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPSwapAggregator__factory>;
    getContractFactory(
      name: "IOKXDexRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOKXDexRouter__factory>;
    getContractFactory(
      name: "I1inchAggregationRouterV6",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.I1inchAggregationRouterV6__factory>;
    getContractFactory(
      name: "IKyberScalingHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKyberScalingHelper__factory>;
    getContractFactory(
      name: "IOdosRouterV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOdosRouterV2__factory>;
    getContractFactory(
      name: "PendleSwap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PendleSwap__factory>;

    getContractAt(
      name: "AggregatorInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorInterface>;
    getContractAt(
      name: "AggregatorV2V3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV2V3Interface>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "AccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControlUpgradeable>;
    getContractAt(
      name: "IAccessControlUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControlUpgradeable>;
    getContractAt(
      name: "IERC5267Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267Upgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "EIP712Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Upgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IERC1271",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "IERC1967",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1967>;
    getContractAt(
      name: "IERC5267",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "EIP712",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "ShortStrings",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrings>;
    getContractAt(
      name: "PendleERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleERC20>;
    getContractAt(
      name: "PendleERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleERC20Permit>;
    getContractAt(
      name: "PendleERC20PermitUpg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleERC20PermitUpg>;
    getContractAt(
      name: "PendleERC20Upg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleERC20Upg>;
    getContractAt(
      name: "BoringOwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringOwnableUpgradeable>;
    getContractAt(
      name: "BoringOwnableUpgradeableData",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringOwnableUpgradeableData>;
    getContractAt(
      name: "Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Errors>;
    getContractAt(
      name: "OracleLib",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleLib>;
    getContractAt(
      name: "PendleGauge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleGauge>;
    getContractAt(
      name: "PendleMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMarket>;
    getContractAt(
      name: "PendleMarketFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMarketFactory>;
    getContractAt(
      name: "PendleMarketFactoryV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMarketFactoryV3>;
    getContractAt(
      name: "PendleMarketV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMarketV3>;
    getContractAt(
      name: "RewardManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardManager>;
    getContractAt(
      name: "RewardManagerAbstract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardManagerAbstract>;
    getContractAt(
      name: "InterestManagerYT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InterestManagerYT>;
    getContractAt(
      name: "PendlePrincipalToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePrincipalToken>;
    getContractAt(
      name: "PendleYieldContractFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleYieldContractFactory>;
    getContractAt(
      name: "PendleYieldToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleYieldToken>;
    getContractAt(
      name: "IAddressProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAddressProvider>;
    getContractAt(
      name: "ILayerZeroEndpoint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILayerZeroEndpoint>;
    getContractAt(
      name: "ILayerZeroReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILayerZeroReceiver>;
    getContractAt(
      name: "IPActionAddRemoveLiqV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionAddRemoveLiqV3>;
    getContractAt(
      name: "IPActionCallbackV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionCallbackV3>;
    getContractAt(
      name: "IPActionInfoStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionInfoStatic>;
    getContractAt(
      name: "IPActionMarketAuxStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionMarketAuxStatic>;
    getContractAt(
      name: "IPActionMarketCoreStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionMarketCoreStatic>;
    getContractAt(
      name: "IPActionMintRedeemStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionMintRedeemStatic>;
    getContractAt(
      name: "IPActionMiscV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionMiscV3>;
    getContractAt(
      name: "IPActionSimple",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionSimple>;
    getContractAt(
      name: "IPActionStorageStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionStorageStatic>;
    getContractAt(
      name: "IPActionStorageV4",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionStorageV4>;
    getContractAt(
      name: "IPActionSwapPTV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionSwapPTV3>;
    getContractAt(
      name: "IPActionSwapYTV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionSwapYTV3>;
    getContractAt(
      name: "IPActionVePendleStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionVePendleStatic>;
    getContractAt(
      name: "IPAllActionV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPAllActionV3>;
    getContractAt(
      name: "IPActionAddRemoveLiqV3Events",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionAddRemoveLiqV3Events>;
    getContractAt(
      name: "IPActionMiscV3Events",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionMiscV3Events>;
    getContractAt(
      name: "IPActionStorageEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionStorageEvents>;
    getContractAt(
      name: "IPActionSwapPTV3Events",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionSwapPTV3Events>;
    getContractAt(
      name: "IPActionSwapYTV3Events",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPActionSwapYTV3Events>;
    getContractAt(
      name: "IPAllEventsV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPAllEventsV3>;
    getContractAt(
      name: "IPChainlinkOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPChainlinkOracle>;
    getContractAt(
      name: "IPChainlinkOracleFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPChainlinkOracleFactory>;
    getContractAt(
      name: "IPChainlinkOracleWithQuote",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPChainlinkOracleWithQuote>;
    getContractAt(
      name: "IPExchangeRateOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPExchangeRateOracle>;
    getContractAt(
      name: "IPFeeDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPFeeDistributor>;
    getContractAt(
      name: "IPFeeDistributorV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPFeeDistributorV2>;
    getContractAt(
      name: "IPGauge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPGauge>;
    getContractAt(
      name: "IPGaugeController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPGaugeController>;
    getContractAt(
      name: "IPGaugeControllerMainchain",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPGaugeControllerMainchain>;
    getContractAt(
      name: "IPGovernanceProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPGovernanceProxy>;
    getContractAt(
      name: "IPInterestManagerYT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPInterestManagerYT>;
    getContractAt(
      name: "IPInterestManagerYTV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPInterestManagerYTV2>;
    getContractAt(
      name: "IPLimitRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPLimitRouter>;
    getContractAt(
      name: "IPLimitRouterCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPLimitRouterCallback>;
    getContractAt(
      name: "IPMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMarket>;
    getContractAt(
      name: "IPMarketFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMarketFactory>;
    getContractAt(
      name: "IPMarketFactoryV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMarketFactoryV3>;
    getContractAt(
      name: "IPMarketSwapCallback",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMarketSwapCallback>;
    getContractAt(
      name: "IPMarketV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMarketV3>;
    getContractAt(
      name: "IPMerkleDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMerkleDistributor>;
    getContractAt(
      name: "IPMiniDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMiniDiamond>;
    getContractAt(
      name: "IPMsgReceiverApp",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMsgReceiverApp>;
    getContractAt(
      name: "IPMsgSendEndpoint",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMsgSendEndpoint>;
    getContractAt(
      name: "IPMultiTokenMerkleDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPMultiTokenMerkleDistributor>;
    getContractAt(
      name: "IPOffchainStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPOffchainStorage>;
    getContractAt(
      name: "IPOracleForSy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPOracleForSy>;
    getContractAt(
      name: "IPPausingInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPPausingInterface>;
    getContractAt(
      name: "IPPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPPriceFeed>;
    getContractAt(
      name: "IPPrincipalToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPPrincipalToken>;
    getContractAt(
      name: "IPPYLpOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPPYLpOracle>;
    getContractAt(
      name: "IPReflector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPReflector>;
    getContractAt(
      name: "IPRouterStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPRouterStatic>;
    getContractAt(
      name: "IPTokenWithSupplyCap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPTokenWithSupplyCap>;
    getContractAt(
      name: "IPVeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPVeToken>;
    getContractAt(
      name: "IPVotingController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPVotingController>;
    getContractAt(
      name: "IPVotingEscrowMainchain",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPVotingEscrowMainchain>;
    getContractAt(
      name: "IPYieldContractFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPYieldContractFactory>;
    getContractAt(
      name: "IPYieldToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPYieldToken>;
    getContractAt(
      name: "IPYieldTokenV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPYieldTokenV2>;
    getContractAt(
      name: "IRedstonePriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRedstonePriceFeed>;
    getContractAt(
      name: "IRewardManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRewardManager>;
    getContractAt(
      name: "IStandardizedYield",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStandardizedYield>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "IWstETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWstETH>;
    getContractAt(
      name: "NonceManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NonceManager>;
    getContractAt(
      name: "LimitRouterBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LimitRouterBase>;
    getContractAt(
      name: "PendleLimitRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleLimitRouter>;
    getContractAt(
      name: "PendleMsgReceiveEndpointUpg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMsgReceiveEndpointUpg>;
    getContractAt(
      name: "PendleMsgReceiverAppUpg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMsgReceiverAppUpg>;
    getContractAt(
      name: "PendleMsgSendEndpointUpg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMsgSendEndpointUpg>;
    getContractAt(
      name: "PendleMsgSenderAppUpg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMsgSenderAppUpg>;
    getContractAt(
      name: "PendleGaugeControllerBaseUpg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleGaugeControllerBaseUpg>;
    getContractAt(
      name: "PendleGaugeControllerMainchainUpg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleGaugeControllerMainchainUpg>;
    getContractAt(
      name: "PendleGaugeControllerSidechainUpg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleGaugeControllerSidechainUpg>;
    getContractAt(
      name: "PendleMerkleDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMerkleDistributor>;
    getContractAt(
      name: "PendleMultiTokenMerkleDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMultiTokenMerkleDistributor>;
    getContractAt(
      name: "PendleFeeDistributor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleFeeDistributor>;
    getContractAt(
      name: "PendleFeeDistributorV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleFeeDistributorV2>;
    getContractAt(
      name: "PendleVotingControllerUpg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleVotingControllerUpg>;
    getContractAt(
      name: "VotingControllerStorageUpg",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingControllerStorageUpg>;
    getContractAt(
      name: "VotingEscrowPendleMainchain",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingEscrowPendleMainchain>;
    getContractAt(
      name: "VotingEscrowPendleSidechain",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingEscrowPendleSidechain>;
    getContractAt(
      name: "VotingEscrowTokenBase",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingEscrowTokenBase>;
    getContractAt(
      name: "AddressProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AddressProvider>;
    getContractAt(
      name: "AutomateReady",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AutomateReady>;
    getContractAt(
      name: "IAutomate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAutomate>;
    getContractAt(
      name: "IOpsProxyFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOpsProxyFactory>;
    getContractAt(
      name: "ITaskTreasuryUpgradable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITaskTreasuryUpgradable>;
    getContractAt(
      name: "BaseSplitCodeFactoryContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseSplitCodeFactoryContract>;
    getContractAt(
      name: "Broadcaster",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Broadcaster>;
    getContractAt(
      name: "EmptyUUPS",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EmptyUUPS>;
    getContractAt(
      name: "SDKErrorsDirectory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SDKErrorsDirectory>;
    getContractAt(
      name: "LegacyNFTHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LegacyNFTHelper>;
    getContractAt(
      name: "StarNFTV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StarNFTV1>;
    getContractAt(
      name: "LimitBackendHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LimitBackendHelper>;
    getContractAt(
      name: "Multicall2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall2>;
    getContractAt(
      name: "PendleExchangeRateOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleExchangeRateOracle>;
    getContractAt(
      name: "PendleGovernanceProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleGovernanceProxy>;
    getContractAt(
      name: "PendleMulticallV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMulticallV1>;
    getContractAt(
      name: "PendleMulticallV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleMulticallV2>;
    getContractAt(
      name: "PendleOffchainStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleOffchainStorage>;
    getContractAt(
      name: "PendlePoolDeployHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePoolDeployHelper>;
    getContractAt(
      name: "PendleWstETHPriceFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleWstETHPriceFeed>;
    getContractAt(
      name: "ActionInfoStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionInfoStatic>;
    getContractAt(
      name: "ActionMarketAuxStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionMarketAuxStatic>;
    getContractAt(
      name: "ActionMarketCoreStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionMarketCoreStatic>;
    getContractAt(
      name: "ActionMintRedeemStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionMintRedeemStatic>;
    getContractAt(
      name: "ActionStorageStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionStorageStatic>;
    getContractAt(
      name: "ActionVePendleStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionVePendleStatic>;
    getContractAt(
      name: "PendleRouterStatic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleRouterStatic>;
    getContractAt(
      name: "SimulateHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SimulateHelper>;
    getContractAt(
      name: "IPossibleSupplyCapInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPossibleSupplyCapInterface>;
    getContractAt(
      name: "SupplyCapReader",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SupplyCapReader>;
    getContractAt(
      name: "PendleBoringOneracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleBoringOneracle>;
    getContractAt(
      name: "PendleBoringSolvBTCOneracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleBoringSolvBTCOneracle>;
    getContractAt(
      name: "PendleRedStoneRateOracleAdapter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleRedStoneRateOracleAdapter>;
    getContractAt(
      name: "PendleSparkLinearDiscountOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleSparkLinearDiscountOracle>;
    getContractAt(
      name: "PTExpiry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PTExpiry>;
    getContractAt(
      name: "PendleSparkLinearDiscountOracleFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleSparkLinearDiscountOracleFactory>;
    getContractAt(
      name: "PendleChainlinkOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleChainlinkOracle>;
    getContractAt(
      name: "PendleChainlinkOracleFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleChainlinkOracleFactory>;
    getContractAt(
      name: "PendleChainlinkOracleWithQuote",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleChainlinkOracleWithQuote>;
    getContractAt(
      name: "PendlePYLpOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendlePYLpOracle>;
    getContractAt(
      name: "BoringPYUsdChainlinkAssetOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringPYUsdChainlinkAssetOracle>;
    getContractAt(
      name: "BoringPYUsdChainlinkSYOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoringPYUsdChainlinkSYOracle>;
    getContractAt(
      name: "ActionAddRemoveLiqV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionAddRemoveLiqV3>;
    getContractAt(
      name: "ActionCallbackV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionCallbackV3>;
    getContractAt(
      name: "ActionMiscV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionMiscV3>;
    getContractAt(
      name: "ActionSimple",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionSimple>;
    getContractAt(
      name: "ActionStorageV4",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionStorageV4>;
    getContractAt(
      name: "ActionSwapPTV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionSwapPTV3>;
    getContractAt(
      name: "ActionSwapYTV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ActionSwapYTV3>;
    getContractAt(
      name: "PendleRouterV4",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleRouterV4>;
    getContractAt(
      name: "Reflector",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Reflector>;
    getContractAt(
      name: "IPSwapAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPSwapAggregator>;
    getContractAt(
      name: "IOKXDexRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOKXDexRouter>;
    getContractAt(
      name: "I1inchAggregationRouterV6",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.I1inchAggregationRouterV6>;
    getContractAt(
      name: "IKyberScalingHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKyberScalingHelper>;
    getContractAt(
      name: "IOdosRouterV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOdosRouterV2>;
    getContractAt(
      name: "PendleSwap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PendleSwap>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
