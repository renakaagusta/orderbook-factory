/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BaseContract, BigNumber, BigNumberish, Signer, utils } from "ethers";
import { EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export type ExitPostExpReturnParamsStruct = {
  netPtFromRemove: BigNumberish;
  netSyFromRemove: BigNumberish;
  netPtRedeem: BigNumberish;
  netSyFromRedeem: BigNumberish;
  totalSyOut: BigNumberish;
};

export type ExitPostExpReturnParamsStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  netPtFromRemove: BigNumber;
  netSyFromRemove: BigNumber;
  netPtRedeem: BigNumber;
  netSyFromRedeem: BigNumber;
  totalSyOut: BigNumber;
};

export type ExitPreExpReturnParamsStruct = {
  netPtFromRemove: BigNumberish;
  netSyFromRemove: BigNumberish;
  netPyRedeem: BigNumberish;
  netSyFromRedeem: BigNumberish;
  netPtSwap: BigNumberish;
  netYtSwap: BigNumberish;
  netSyFromSwap: BigNumberish;
  netSyFee: BigNumberish;
  totalSyOut: BigNumberish;
};

export type ExitPreExpReturnParamsStructOutput = [
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  netPtFromRemove: BigNumber;
  netSyFromRemove: BigNumber;
  netPyRedeem: BigNumber;
  netSyFromRedeem: BigNumber;
  netPtSwap: BigNumber;
  netYtSwap: BigNumber;
  netSyFromSwap: BigNumber;
  netSyFee: BigNumber;
  totalSyOut: BigNumber;
};

export interface IPActionMiscV3EventsInterface extends utils.Interface {
  contractName: "IPActionMiscV3Events";
  functions: {};

  events: {
    "ExitPostExpToSy(address,address,address,uint256,tuple)": EventFragment;
    "ExitPostExpToToken(address,address,address,address,uint256,uint256,tuple)": EventFragment;
    "ExitPreExpToSy(address,address,address,uint256,tuple)": EventFragment;
    "ExitPreExpToToken(address,address,address,address,uint256,uint256,tuple)": EventFragment;
    "MintPyFromSy(address,address,address,uint256,uint256)": EventFragment;
    "MintPyFromToken(address,address,address,address,uint256,uint256,uint256)": EventFragment;
    "MintSyFromToken(address,address,address,address,uint256,uint256)": EventFragment;
    "RedeemPyToSy(address,address,address,uint256,uint256)": EventFragment;
    "RedeemPyToToken(address,address,address,address,uint256,uint256,uint256)": EventFragment;
    "RedeemSyToToken(address,address,address,address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ExitPostExpToSy"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExitPostExpToToken"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExitPreExpToSy"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ExitPreExpToToken"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MintPyFromSy"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MintPyFromToken"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MintSyFromToken"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RedeemPyToSy"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RedeemPyToToken"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RedeemSyToToken"): EventFragment;
}

export type ExitPostExpToSyEvent = TypedEvent<
  [string, string, string, BigNumber, ExitPostExpReturnParamsStructOutput],
  {
    caller: string;
    market: string;
    receiver: string;
    netLpIn: BigNumber;
    params: ExitPostExpReturnParamsStructOutput;
  }
>;

export type ExitPostExpToSyEventFilter = TypedEventFilter<ExitPostExpToSyEvent>;

export type ExitPostExpToTokenEvent = TypedEvent<
  [
    string,
    string,
    string,
    string,
    BigNumber,
    BigNumber,
    ExitPostExpReturnParamsStructOutput
  ],
  {
    caller: string;
    market: string;
    token: string;
    receiver: string;
    netLpIn: BigNumber;
    totalTokenOut: BigNumber;
    params: ExitPostExpReturnParamsStructOutput;
  }
>;

export type ExitPostExpToTokenEventFilter =
  TypedEventFilter<ExitPostExpToTokenEvent>;

export type ExitPreExpToSyEvent = TypedEvent<
  [string, string, string, BigNumber, ExitPreExpReturnParamsStructOutput],
  {
    caller: string;
    market: string;
    receiver: string;
    netLpIn: BigNumber;
    params: ExitPreExpReturnParamsStructOutput;
  }
>;

export type ExitPreExpToSyEventFilter = TypedEventFilter<ExitPreExpToSyEvent>;

export type ExitPreExpToTokenEvent = TypedEvent<
  [
    string,
    string,
    string,
    string,
    BigNumber,
    BigNumber,
    ExitPreExpReturnParamsStructOutput
  ],
  {
    caller: string;
    market: string;
    token: string;
    receiver: string;
    netLpIn: BigNumber;
    totalTokenOut: BigNumber;
    params: ExitPreExpReturnParamsStructOutput;
  }
>;

export type ExitPreExpToTokenEventFilter =
  TypedEventFilter<ExitPreExpToTokenEvent>;

export type MintPyFromSyEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber],
  {
    caller: string;
    receiver: string;
    YT: string;
    netSyIn: BigNumber;
    netPyOut: BigNumber;
  }
>;

export type MintPyFromSyEventFilter = TypedEventFilter<MintPyFromSyEvent>;

export type MintPyFromTokenEvent = TypedEvent<
  [string, string, string, string, BigNumber, BigNumber, BigNumber],
  {
    caller: string;
    tokenIn: string;
    YT: string;
    receiver: string;
    netTokenIn: BigNumber;
    netPyOut: BigNumber;
    netSyInterm: BigNumber;
  }
>;

export type MintPyFromTokenEventFilter = TypedEventFilter<MintPyFromTokenEvent>;

export type MintSyFromTokenEvent = TypedEvent<
  [string, string, string, string, BigNumber, BigNumber],
  {
    caller: string;
    tokenIn: string;
    SY: string;
    receiver: string;
    netTokenIn: BigNumber;
    netSyOut: BigNumber;
  }
>;

export type MintSyFromTokenEventFilter = TypedEventFilter<MintSyFromTokenEvent>;

export type RedeemPyToSyEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber],
  {
    caller: string;
    receiver: string;
    YT: string;
    netPyIn: BigNumber;
    netSyOut: BigNumber;
  }
>;

export type RedeemPyToSyEventFilter = TypedEventFilter<RedeemPyToSyEvent>;

export type RedeemPyToTokenEvent = TypedEvent<
  [string, string, string, string, BigNumber, BigNumber, BigNumber],
  {
    caller: string;
    tokenOut: string;
    YT: string;
    receiver: string;
    netPyIn: BigNumber;
    netTokenOut: BigNumber;
    netSyInterm: BigNumber;
  }
>;

export type RedeemPyToTokenEventFilter = TypedEventFilter<RedeemPyToTokenEvent>;

export type RedeemSyToTokenEvent = TypedEvent<
  [string, string, string, string, BigNumber, BigNumber],
  {
    caller: string;
    tokenOut: string;
    SY: string;
    receiver: string;
    netSyIn: BigNumber;
    netTokenOut: BigNumber;
  }
>;

export type RedeemSyToTokenEventFilter = TypedEventFilter<RedeemSyToTokenEvent>;

export interface IPActionMiscV3Events extends BaseContract {
  contractName: "IPActionMiscV3Events";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IPActionMiscV3EventsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "ExitPostExpToSy(address,address,address,uint256,tuple)"(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netLpIn?: null,
      params?: null
    ): ExitPostExpToSyEventFilter;
    ExitPostExpToSy(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netLpIn?: null,
      params?: null
    ): ExitPostExpToSyEventFilter;

    "ExitPostExpToToken(address,address,address,address,uint256,uint256,tuple)"(
      caller?: string | null,
      market?: string | null,
      token?: string | null,
      receiver?: null,
      netLpIn?: null,
      totalTokenOut?: null,
      params?: null
    ): ExitPostExpToTokenEventFilter;
    ExitPostExpToToken(
      caller?: string | null,
      market?: string | null,
      token?: string | null,
      receiver?: null,
      netLpIn?: null,
      totalTokenOut?: null,
      params?: null
    ): ExitPostExpToTokenEventFilter;

    "ExitPreExpToSy(address,address,address,uint256,tuple)"(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netLpIn?: null,
      params?: null
    ): ExitPreExpToSyEventFilter;
    ExitPreExpToSy(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netLpIn?: null,
      params?: null
    ): ExitPreExpToSyEventFilter;

    "ExitPreExpToToken(address,address,address,address,uint256,uint256,tuple)"(
      caller?: string | null,
      market?: string | null,
      token?: string | null,
      receiver?: null,
      netLpIn?: null,
      totalTokenOut?: null,
      params?: null
    ): ExitPreExpToTokenEventFilter;
    ExitPreExpToToken(
      caller?: string | null,
      market?: string | null,
      token?: string | null,
      receiver?: null,
      netLpIn?: null,
      totalTokenOut?: null,
      params?: null
    ): ExitPreExpToTokenEventFilter;

    "MintPyFromSy(address,address,address,uint256,uint256)"(
      caller?: string | null,
      receiver?: string | null,
      YT?: string | null,
      netSyIn?: null,
      netPyOut?: null
    ): MintPyFromSyEventFilter;
    MintPyFromSy(
      caller?: string | null,
      receiver?: string | null,
      YT?: string | null,
      netSyIn?: null,
      netPyOut?: null
    ): MintPyFromSyEventFilter;

    "MintPyFromToken(address,address,address,address,uint256,uint256,uint256)"(
      caller?: string | null,
      tokenIn?: string | null,
      YT?: string | null,
      receiver?: null,
      netTokenIn?: null,
      netPyOut?: null,
      netSyInterm?: null
    ): MintPyFromTokenEventFilter;
    MintPyFromToken(
      caller?: string | null,
      tokenIn?: string | null,
      YT?: string | null,
      receiver?: null,
      netTokenIn?: null,
      netPyOut?: null,
      netSyInterm?: null
    ): MintPyFromTokenEventFilter;

    "MintSyFromToken(address,address,address,address,uint256,uint256)"(
      caller?: string | null,
      tokenIn?: string | null,
      SY?: string | null,
      receiver?: null,
      netTokenIn?: null,
      netSyOut?: null
    ): MintSyFromTokenEventFilter;
    MintSyFromToken(
      caller?: string | null,
      tokenIn?: string | null,
      SY?: string | null,
      receiver?: null,
      netTokenIn?: null,
      netSyOut?: null
    ): MintSyFromTokenEventFilter;

    "RedeemPyToSy(address,address,address,uint256,uint256)"(
      caller?: string | null,
      receiver?: string | null,
      YT?: string | null,
      netPyIn?: null,
      netSyOut?: null
    ): RedeemPyToSyEventFilter;
    RedeemPyToSy(
      caller?: string | null,
      receiver?: string | null,
      YT?: string | null,
      netPyIn?: null,
      netSyOut?: null
    ): RedeemPyToSyEventFilter;

    "RedeemPyToToken(address,address,address,address,uint256,uint256,uint256)"(
      caller?: string | null,
      tokenOut?: string | null,
      YT?: string | null,
      receiver?: null,
      netPyIn?: null,
      netTokenOut?: null,
      netSyInterm?: null
    ): RedeemPyToTokenEventFilter;
    RedeemPyToToken(
      caller?: string | null,
      tokenOut?: string | null,
      YT?: string | null,
      receiver?: null,
      netPyIn?: null,
      netTokenOut?: null,
      netSyInterm?: null
    ): RedeemPyToTokenEventFilter;

    "RedeemSyToToken(address,address,address,address,uint256,uint256)"(
      caller?: string | null,
      tokenOut?: string | null,
      SY?: string | null,
      receiver?: null,
      netSyIn?: null,
      netTokenOut?: null
    ): RedeemSyToTokenEventFilter;
    RedeemSyToToken(
      caller?: string | null,
      tokenOut?: string | null,
      SY?: string | null,
      receiver?: null,
      netSyIn?: null,
      netTokenOut?: null
    ): RedeemSyToTokenEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
