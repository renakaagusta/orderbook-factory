/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { BaseContract, BigNumber, Signer, utils } from "ethers";
import { EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface IPActionAddRemoveLiqV3EventsInterface extends utils.Interface {
  contractName: "IPActionAddRemoveLiqV3Events";
  functions: {};

  events: {
    "AddLiquidityDualSyAndPt(address,address,address,uint256,uint256,uint256)": EventFragment;
    "AddLiquidityDualTokenAndPt(address,address,address,address,uint256,uint256,uint256,uint256)": EventFragment;
    "AddLiquiditySinglePt(address,address,address,uint256,uint256)": EventFragment;
    "AddLiquiditySingleSy(address,address,address,uint256,uint256)": EventFragment;
    "AddLiquiditySingleSyKeepYt(address,address,address,uint256,uint256,uint256,uint256)": EventFragment;
    "AddLiquiditySingleToken(address,address,address,address,uint256,uint256,uint256)": EventFragment;
    "AddLiquiditySingleTokenKeepYt(address,address,address,address,uint256,uint256,uint256,uint256,uint256)": EventFragment;
    "RemoveLiquidityDualSyAndPt(address,address,address,uint256,uint256,uint256)": EventFragment;
    "RemoveLiquidityDualTokenAndPt(address,address,address,address,uint256,uint256,uint256,uint256)": EventFragment;
    "RemoveLiquiditySinglePt(address,address,address,uint256,uint256)": EventFragment;
    "RemoveLiquiditySingleSy(address,address,address,uint256,uint256)": EventFragment;
    "RemoveLiquiditySingleToken(address,address,address,address,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AddLiquidityDualSyAndPt"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddLiquidityDualTokenAndPt"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddLiquiditySinglePt"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddLiquiditySingleSy"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddLiquiditySingleSyKeepYt"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddLiquiditySingleToken"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AddLiquiditySingleTokenKeepYt"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemoveLiquidityDualSyAndPt"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RemoveLiquidityDualTokenAndPt"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemoveLiquiditySinglePt"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemoveLiquiditySingleSy"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemoveLiquiditySingleToken"): EventFragment;
}

export type AddLiquidityDualSyAndPtEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber, BigNumber],
  {
    caller: string;
    market: string;
    receiver: string;
    netSyUsed: BigNumber;
    netPtUsed: BigNumber;
    netLpOut: BigNumber;
  }
>;

export type AddLiquidityDualSyAndPtEventFilter =
  TypedEventFilter<AddLiquidityDualSyAndPtEvent>;

export type AddLiquidityDualTokenAndPtEvent = TypedEvent<
  [string, string, string, string, BigNumber, BigNumber, BigNumber, BigNumber],
  {
    caller: string;
    market: string;
    tokenIn: string;
    receiver: string;
    netTokenUsed: BigNumber;
    netPtUsed: BigNumber;
    netLpOut: BigNumber;
    netSyInterm: BigNumber;
  }
>;

export type AddLiquidityDualTokenAndPtEventFilter =
  TypedEventFilter<AddLiquidityDualTokenAndPtEvent>;

export type AddLiquiditySinglePtEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber],
  {
    caller: string;
    market: string;
    receiver: string;
    netPtIn: BigNumber;
    netLpOut: BigNumber;
  }
>;

export type AddLiquiditySinglePtEventFilter =
  TypedEventFilter<AddLiquiditySinglePtEvent>;

export type AddLiquiditySingleSyEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber],
  {
    caller: string;
    market: string;
    receiver: string;
    netSyIn: BigNumber;
    netLpOut: BigNumber;
  }
>;

export type AddLiquiditySingleSyEventFilter =
  TypedEventFilter<AddLiquiditySingleSyEvent>;

export type AddLiquiditySingleSyKeepYtEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber, BigNumber, BigNumber],
  {
    caller: string;
    market: string;
    receiver: string;
    netSyIn: BigNumber;
    netSyMintPy: BigNumber;
    netLpOut: BigNumber;
    netYtOut: BigNumber;
  }
>;

export type AddLiquiditySingleSyKeepYtEventFilter =
  TypedEventFilter<AddLiquiditySingleSyKeepYtEvent>;

export type AddLiquiditySingleTokenEvent = TypedEvent<
  [string, string, string, string, BigNumber, BigNumber, BigNumber],
  {
    caller: string;
    market: string;
    token: string;
    receiver: string;
    netTokenIn: BigNumber;
    netLpOut: BigNumber;
    netSyInterm: BigNumber;
  }
>;

export type AddLiquiditySingleTokenEventFilter =
  TypedEventFilter<AddLiquiditySingleTokenEvent>;

export type AddLiquiditySingleTokenKeepYtEvent = TypedEvent<
  [
    string,
    string,
    string,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ],
  {
    caller: string;
    market: string;
    token: string;
    receiver: string;
    netTokenIn: BigNumber;
    netLpOut: BigNumber;
    netYtOut: BigNumber;
    netSyMintPy: BigNumber;
    netSyInterm: BigNumber;
  }
>;

export type AddLiquiditySingleTokenKeepYtEventFilter =
  TypedEventFilter<AddLiquiditySingleTokenKeepYtEvent>;

export type RemoveLiquidityDualSyAndPtEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber, BigNumber],
  {
    caller: string;
    market: string;
    receiver: string;
    netLpToRemove: BigNumber;
    netPtOut: BigNumber;
    netSyOut: BigNumber;
  }
>;

export type RemoveLiquidityDualSyAndPtEventFilter =
  TypedEventFilter<RemoveLiquidityDualSyAndPtEvent>;

export type RemoveLiquidityDualTokenAndPtEvent = TypedEvent<
  [string, string, string, string, BigNumber, BigNumber, BigNumber, BigNumber],
  {
    caller: string;
    market: string;
    tokenOut: string;
    receiver: string;
    netLpToRemove: BigNumber;
    netPtOut: BigNumber;
    netTokenOut: BigNumber;
    netSyInterm: BigNumber;
  }
>;

export type RemoveLiquidityDualTokenAndPtEventFilter =
  TypedEventFilter<RemoveLiquidityDualTokenAndPtEvent>;

export type RemoveLiquiditySinglePtEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber],
  {
    caller: string;
    market: string;
    receiver: string;
    netLpToRemove: BigNumber;
    netPtOut: BigNumber;
  }
>;

export type RemoveLiquiditySinglePtEventFilter =
  TypedEventFilter<RemoveLiquiditySinglePtEvent>;

export type RemoveLiquiditySingleSyEvent = TypedEvent<
  [string, string, string, BigNumber, BigNumber],
  {
    caller: string;
    market: string;
    receiver: string;
    netLpToRemove: BigNumber;
    netSyOut: BigNumber;
  }
>;

export type RemoveLiquiditySingleSyEventFilter =
  TypedEventFilter<RemoveLiquiditySingleSyEvent>;

export type RemoveLiquiditySingleTokenEvent = TypedEvent<
  [string, string, string, string, BigNumber, BigNumber, BigNumber],
  {
    caller: string;
    market: string;
    token: string;
    receiver: string;
    netLpToRemove: BigNumber;
    netTokenOut: BigNumber;
    netSyInterm: BigNumber;
  }
>;

export type RemoveLiquiditySingleTokenEventFilter =
  TypedEventFilter<RemoveLiquiditySingleTokenEvent>;

export interface IPActionAddRemoveLiqV3Events extends BaseContract {
  contractName: "IPActionAddRemoveLiqV3Events";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IPActionAddRemoveLiqV3EventsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "AddLiquidityDualSyAndPt(address,address,address,uint256,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netSyUsed?: null,
      netPtUsed?: null,
      netLpOut?: null
    ): AddLiquidityDualSyAndPtEventFilter;
    AddLiquidityDualSyAndPt(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netSyUsed?: null,
      netPtUsed?: null,
      netLpOut?: null
    ): AddLiquidityDualSyAndPtEventFilter;

    "AddLiquidityDualTokenAndPt(address,address,address,address,uint256,uint256,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      tokenIn?: string | null,
      receiver?: null,
      netTokenUsed?: null,
      netPtUsed?: null,
      netLpOut?: null,
      netSyInterm?: null
    ): AddLiquidityDualTokenAndPtEventFilter;
    AddLiquidityDualTokenAndPt(
      caller?: string | null,
      market?: string | null,
      tokenIn?: string | null,
      receiver?: null,
      netTokenUsed?: null,
      netPtUsed?: null,
      netLpOut?: null,
      netSyInterm?: null
    ): AddLiquidityDualTokenAndPtEventFilter;

    "AddLiquiditySinglePt(address,address,address,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netPtIn?: null,
      netLpOut?: null
    ): AddLiquiditySinglePtEventFilter;
    AddLiquiditySinglePt(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netPtIn?: null,
      netLpOut?: null
    ): AddLiquiditySinglePtEventFilter;

    "AddLiquiditySingleSy(address,address,address,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netSyIn?: null,
      netLpOut?: null
    ): AddLiquiditySingleSyEventFilter;
    AddLiquiditySingleSy(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netSyIn?: null,
      netLpOut?: null
    ): AddLiquiditySingleSyEventFilter;

    "AddLiquiditySingleSyKeepYt(address,address,address,uint256,uint256,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netSyIn?: null,
      netSyMintPy?: null,
      netLpOut?: null,
      netYtOut?: null
    ): AddLiquiditySingleSyKeepYtEventFilter;
    AddLiquiditySingleSyKeepYt(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netSyIn?: null,
      netSyMintPy?: null,
      netLpOut?: null,
      netYtOut?: null
    ): AddLiquiditySingleSyKeepYtEventFilter;

    "AddLiquiditySingleToken(address,address,address,address,uint256,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      token?: string | null,
      receiver?: null,
      netTokenIn?: null,
      netLpOut?: null,
      netSyInterm?: null
    ): AddLiquiditySingleTokenEventFilter;
    AddLiquiditySingleToken(
      caller?: string | null,
      market?: string | null,
      token?: string | null,
      receiver?: null,
      netTokenIn?: null,
      netLpOut?: null,
      netSyInterm?: null
    ): AddLiquiditySingleTokenEventFilter;

    "AddLiquiditySingleTokenKeepYt(address,address,address,address,uint256,uint256,uint256,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      token?: string | null,
      receiver?: null,
      netTokenIn?: null,
      netLpOut?: null,
      netYtOut?: null,
      netSyMintPy?: null,
      netSyInterm?: null
    ): AddLiquiditySingleTokenKeepYtEventFilter;
    AddLiquiditySingleTokenKeepYt(
      caller?: string | null,
      market?: string | null,
      token?: string | null,
      receiver?: null,
      netTokenIn?: null,
      netLpOut?: null,
      netYtOut?: null,
      netSyMintPy?: null,
      netSyInterm?: null
    ): AddLiquiditySingleTokenKeepYtEventFilter;

    "RemoveLiquidityDualSyAndPt(address,address,address,uint256,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netLpToRemove?: null,
      netPtOut?: null,
      netSyOut?: null
    ): RemoveLiquidityDualSyAndPtEventFilter;
    RemoveLiquidityDualSyAndPt(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netLpToRemove?: null,
      netPtOut?: null,
      netSyOut?: null
    ): RemoveLiquidityDualSyAndPtEventFilter;

    "RemoveLiquidityDualTokenAndPt(address,address,address,address,uint256,uint256,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      tokenOut?: string | null,
      receiver?: null,
      netLpToRemove?: null,
      netPtOut?: null,
      netTokenOut?: null,
      netSyInterm?: null
    ): RemoveLiquidityDualTokenAndPtEventFilter;
    RemoveLiquidityDualTokenAndPt(
      caller?: string | null,
      market?: string | null,
      tokenOut?: string | null,
      receiver?: null,
      netLpToRemove?: null,
      netPtOut?: null,
      netTokenOut?: null,
      netSyInterm?: null
    ): RemoveLiquidityDualTokenAndPtEventFilter;

    "RemoveLiquiditySinglePt(address,address,address,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netLpToRemove?: null,
      netPtOut?: null
    ): RemoveLiquiditySinglePtEventFilter;
    RemoveLiquiditySinglePt(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netLpToRemove?: null,
      netPtOut?: null
    ): RemoveLiquiditySinglePtEventFilter;

    "RemoveLiquiditySingleSy(address,address,address,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netLpToRemove?: null,
      netSyOut?: null
    ): RemoveLiquiditySingleSyEventFilter;
    RemoveLiquiditySingleSy(
      caller?: string | null,
      market?: string | null,
      receiver?: string | null,
      netLpToRemove?: null,
      netSyOut?: null
    ): RemoveLiquiditySingleSyEventFilter;

    "RemoveLiquiditySingleToken(address,address,address,address,uint256,uint256,uint256)"(
      caller?: string | null,
      market?: string | null,
      token?: string | null,
      receiver?: null,
      netLpToRemove?: null,
      netTokenOut?: null,
      netSyInterm?: null
    ): RemoveLiquiditySingleTokenEventFilter;
    RemoveLiquiditySingleToken(
      caller?: string | null,
      market?: string | null,
      token?: string | null,
      receiver?: null,
      netLpToRemove?: null,
      netTokenOut?: null,
      netSyInterm?: null
    ): RemoveLiquiditySingleTokenEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
