/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export interface ActionMintRedeemStaticInterface extends utils.Interface {
  contractName: "ActionMintRedeemStatic";
  functions: {
    "getAmountTokenToMintSy(address,address,uint256)": FunctionFragment;
    "mintPyFromSyStatic(address,uint256)": FunctionFragment;
    "mintPyFromTokenStatic(address,address,uint256)": FunctionFragment;
    "mintSyFromTokenStatic(address,address,uint256)": FunctionFragment;
    "pyIndexCurrentViewMarket(address)": FunctionFragment;
    "pyIndexCurrentViewYt(address)": FunctionFragment;
    "redeemPyToSyStatic(address,uint256)": FunctionFragment;
    "redeemPyToTokenStatic(address,uint256,address)": FunctionFragment;
    "redeemSyToTokenStatic(address,address,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAmountTokenToMintSy",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintPyFromSyStatic",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintPyFromTokenStatic",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "mintSyFromTokenStatic",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "pyIndexCurrentViewMarket",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "pyIndexCurrentViewYt",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemPyToSyStatic",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemPyToTokenStatic",
    values: [string, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "redeemSyToTokenStatic",
    values: [string, string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "getAmountTokenToMintSy",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintPyFromSyStatic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintPyFromTokenStatic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintSyFromTokenStatic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pyIndexCurrentViewMarket",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pyIndexCurrentViewYt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemPyToSyStatic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemPyToTokenStatic",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "redeemSyToTokenStatic",
    data: BytesLike
  ): Result;

  events: {};
}

export interface ActionMintRedeemStatic extends BaseContract {
  contractName: "ActionMintRedeemStatic";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ActionMintRedeemStaticInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getAmountTokenToMintSy(
      SY: string,
      tokenIn: string,
      netSyOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { netTokenIn: BigNumber }>;

    mintPyFromSyStatic(
      YT: string,
      netSyToMint: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { netPYOut: BigNumber }>;

    mintPyFromTokenStatic(
      YT: string,
      tokenIn: string,
      netTokenIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { netPyOut: BigNumber }>;

    mintSyFromTokenStatic(
      SY: string,
      tokenIn: string,
      netTokenIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { netSyOut: BigNumber }>;

    pyIndexCurrentViewMarket(
      market: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    pyIndexCurrentViewYt(
      yt: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    redeemPyToSyStatic(
      YT: string,
      netPYToRedeem: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { netSyOut: BigNumber }>;

    redeemPyToTokenStatic(
      YT: string,
      netPYToRedeem: BigNumberish,
      tokenOut: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { netTokenOut: BigNumber }>;

    redeemSyToTokenStatic(
      SY: string,
      tokenOut: string,
      netSyIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { netTokenOut: BigNumber }>;
  };

  getAmountTokenToMintSy(
    SY: string,
    tokenIn: string,
    netSyOut: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  mintPyFromSyStatic(
    YT: string,
    netSyToMint: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  mintPyFromTokenStatic(
    YT: string,
    tokenIn: string,
    netTokenIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  mintSyFromTokenStatic(
    SY: string,
    tokenIn: string,
    netTokenIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  pyIndexCurrentViewMarket(
    market: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  pyIndexCurrentViewYt(
    yt: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  redeemPyToSyStatic(
    YT: string,
    netPYToRedeem: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  redeemPyToTokenStatic(
    YT: string,
    netPYToRedeem: BigNumberish,
    tokenOut: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  redeemSyToTokenStatic(
    SY: string,
    tokenOut: string,
    netSyIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    getAmountTokenToMintSy(
      SY: string,
      tokenIn: string,
      netSyOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintPyFromSyStatic(
      YT: string,
      netSyToMint: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintPyFromTokenStatic(
      YT: string,
      tokenIn: string,
      netTokenIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintSyFromTokenStatic(
      SY: string,
      tokenIn: string,
      netTokenIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pyIndexCurrentViewMarket(
      market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pyIndexCurrentViewYt(
      yt: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemPyToSyStatic(
      YT: string,
      netPYToRedeem: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemPyToTokenStatic(
      YT: string,
      netPYToRedeem: BigNumberish,
      tokenOut: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemSyToTokenStatic(
      SY: string,
      tokenOut: string,
      netSyIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    getAmountTokenToMintSy(
      SY: string,
      tokenIn: string,
      netSyOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintPyFromSyStatic(
      YT: string,
      netSyToMint: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintPyFromTokenStatic(
      YT: string,
      tokenIn: string,
      netTokenIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintSyFromTokenStatic(
      SY: string,
      tokenIn: string,
      netTokenIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pyIndexCurrentViewMarket(
      market: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pyIndexCurrentViewYt(
      yt: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemPyToSyStatic(
      YT: string,
      netPYToRedeem: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemPyToTokenStatic(
      YT: string,
      netPYToRedeem: BigNumberish,
      tokenOut: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    redeemSyToTokenStatic(
      SY: string,
      tokenOut: string,
      netSyIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAmountTokenToMintSy(
      SY: string,
      tokenIn: string,
      netSyOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mintPyFromSyStatic(
      YT: string,
      netSyToMint: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mintPyFromTokenStatic(
      YT: string,
      tokenIn: string,
      netTokenIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mintSyFromTokenStatic(
      SY: string,
      tokenIn: string,
      netTokenIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pyIndexCurrentViewMarket(
      market: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pyIndexCurrentViewYt(
      yt: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    redeemPyToSyStatic(
      YT: string,
      netPYToRedeem: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    redeemPyToTokenStatic(
      YT: string,
      netPYToRedeem: BigNumberish,
      tokenOut: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    redeemSyToTokenStatic(
      SY: string,
      tokenOut: string,
      netSyIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
