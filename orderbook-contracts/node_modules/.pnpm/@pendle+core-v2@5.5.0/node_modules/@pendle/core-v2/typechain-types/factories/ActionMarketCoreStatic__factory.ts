/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ActionMarketCoreStatic,
  ActionMarketCoreStaticInterface,
} from "../ActionMarketCoreStatic";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "exchangeRate",
        type: "int256",
      },
    ],
    name: "MarketExchangeRateBelowOne",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "currentAmount",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "requiredAmount",
        type: "int256",
      },
    ],
    name: "MarketInsufficientPtForTrade",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketProportionMustNotEqualOne",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "proportion",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "maxProportion",
        type: "int256",
      },
    ],
    name: "MarketProportionTooHigh",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "rateScalar",
        type: "int256",
      },
    ],
    name: "MarketRateScalarBelowZero",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketZeroAmountsInput",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketZeroAmountsOutput",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketZeroLnImpliedRate",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "totalPt",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "totalAsset",
        type: "int256",
      },
    ],
    name: "MarketZeroTotalPtOrTotalAsset",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "netSyDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyUsed",
        type: "uint256",
      },
    ],
    name: "RouterNotAllSyUsed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netSyDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtDesired",
        type: "uint256",
      },
    ],
    name: "addLiquidityDualSyAndPtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netLpOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyUsed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtUsed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netTokenDesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtDesired",
        type: "uint256",
      },
    ],
    name: "addLiquidityDualTokenAndPtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netLpOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netTokenUsed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtUsed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyUsed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyDesired",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netPtIn",
        type: "uint256",
      },
    ],
    name: "addLiquiditySinglePtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netLpOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtToSwap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFromSwap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netSyIn",
        type: "uint256",
      },
    ],
    name: "addLiquiditySingleSyKeepYtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netLpOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netYtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyToPY",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netSyIn",
        type: "uint256",
      },
    ],
    name: "addLiquiditySingleSyStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netLpOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtFromSwap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyToSwap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netTokenIn",
        type: "uint256",
      },
    ],
    name: "addLiquiditySingleTokenKeepYtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netLpOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netYtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyMinted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyToPY",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netTokenIn",
        type: "uint256",
      },
    ],
    name: "addLiquiditySingleTokenStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netLpOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtFromSwap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyMinted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyToSwap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
    ],
    name: "readMarketState",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "totalPt",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "totalSy",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "totalLp",
            type: "int256",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
          {
            internalType: "int256",
            name: "scalarRoot",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lnFeeRateRoot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reserveFeePercent",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastLnImpliedRate",
            type: "uint256",
          },
        ],
        internalType: "struct MarketState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netLpToRemove",
        type: "uint256",
      },
    ],
    name: "removeLiquidityDualSyAndPtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netSyOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netLpToRemove",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "removeLiquidityDualTokenAndPtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netTokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyToRedeem",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netLpToRemove",
        type: "uint256",
      },
    ],
    name: "removeLiquiditySinglePtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netPtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtFromSwap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFromBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtFromBurn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netLpToRemove",
        type: "uint256",
      },
    ],
    name: "removeLiquiditySingleSyStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netSyOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFromBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtFromBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFromSwap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "netLpToRemove",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "removeLiquiditySingleTokenStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netTokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFromBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPtFromBurn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFromSwap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactPtIn",
        type: "uint256",
      },
    ],
    name: "swapExactPtForSyStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netSyOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactPtIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "swapExactPtForTokenStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netTokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyToRedeem",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactPtIn",
        type: "uint256",
      },
    ],
    name: "swapExactPtForYtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netYtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPtToSwap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactSyIn",
        type: "uint256",
      },
    ],
    name: "swapExactSyForPtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netPtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactSyIn",
        type: "uint256",
      },
    ],
    name: "swapExactSyForYtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netYtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenIn",
        type: "uint256",
      },
    ],
    name: "swapExactTokenForPtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netPtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyMinted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountTokenIn",
        type: "uint256",
      },
    ],
    name: "swapExactTokenForYtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netYtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyMinted",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactYtIn",
        type: "uint256",
      },
    ],
    name: "swapExactYtForPtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netPtOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPtSwapped",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactYtIn",
        type: "uint256",
      },
    ],
    name: "swapExactYtForSyStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netSyOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyOwedInt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPYToRepaySyOwedInt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPYToRedeemSyOutInt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactYtIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "swapExactYtForTokenStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netTokenOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyOwedInt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPYToRepaySyOwedInt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netPYToRedeemSyOutInt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactSyOut",
        type: "uint256",
      },
    ],
    name: "swapPtForExactSyStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netPtIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactPtOut",
        type: "uint256",
      },
    ],
    name: "swapSyForExactPtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netSyIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactYtOut",
        type: "uint256",
      },
    ],
    name: "swapSyForExactYtStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netSyIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyReceivedInt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalSyNeedInt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "exactSyOut",
        type: "uint256",
      },
    ],
    name: "swapYtForExactSyStatic",
    outputs: [
      {
        internalType: "uint256",
        name: "netYtIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "netSyFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "priceImpact",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRateAfter",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613bde806100206000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c80631e0b82941461014e5780631e96585114610186578063252a6227146101c657806325cadd2c1461021457806326e44ccf1461022757806331562d0514610262578063340e11261461027557806338f3ba8e146102885780633b672dcd146102b65780633c71db3d146102c9578063457c4464146102dc57806353dfc868146102ef5780635b42f5e3146103025780636e7721ab1461031557806370f2c7fc1461032857806388a485f31461033b5780638c0cc77c1461034e5780638d4ab764146103615780639766cb4e146103745780639a01bff6146103955780639e487673146103dd578063a3ccc850146103fd578063a9d09ae314610410578063af2c797114610423578063b1f3606514610436578063d8d3307814610449578063e9ecd3b21461045c575b600080fd5b61016161015c3660046136eb565b61046f565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b6101996101943660046136eb565b6104c7565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161017d565b6101d96101d4366004613717565b610592565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015260e08201526101000161017d565b6101996102223660046136eb565b6105d6565b61023a610235366004613759565b610657565b604080519586526020860194909452928401919091526060830152608082015260a00161017d565b61023a610270366004613717565b610687565b6101616102833660046136eb565b6106bb565b61029b61029636600461379a565b610750565b6040805193845260208401929092529082015260600161017d565b61023a6102c43660046136eb565b61077e565b61023a6102d73660046137cf565b610824565b6101616102ea366004613759565b610887565b6101616102fd3660046136eb565b6108b5565b6101996103103660046136eb565b610955565b6101616103233660046136eb565b610a0f565b6101d9610336366004613717565b610a41565b61029b6103493660046136eb565b610a57565b61016161035c3660046136eb565b610af6565b61023a61036f3660046136eb565b610b7a565b6103876103823660046136eb565b610c00565b60405161017d929190613815565b6103a86103a33660046136eb565b610c26565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e00161017d565b6103f06103eb366004613823565b610d3c565b60405161017d919061389f565b6103a861040b366004613759565b610d53565b6103a861041e3660046136eb565b610d8d565b61029b610431366004613717565b610e4e565b6101616104443660046136eb565b610e77565b6103a86104573660046136eb565b610efd565b61023a61046a366004613759565b610f80565b600080600080600061048087610f9f565b905061049761048e88611029565b82908842611090565b5090955093506104af876104aa886110e1565b6110f8565b92506104bb8782611168565b91505092959194509250565b60008060008060008060006104db89610f9f565b90506105296104e98a611029565b6040805160a0810182526003548152600454602082015260055491810191909152600654606082015260075460808201528391908b906000904290611190565b5091975061053a91508a9050610f9f565b905061054861048e8a611029565b50955091506105648261055b888b6138c4565b83919042611346565b5090985061057991508a90506104aa886110e1565b93506105858982611168565b9250509295509295509295565b6000806000806000806000806105a88b8b610c26565b949c50929a5090985092965091945090925090506105c78b8a866113b1565b97509397509397509397509397565b6000806000806000806105f1886105ec896110e1565b611441565b935060006105fe89610f9f565b9050600061060b8a611029565b90506106226106198b611029565b83908b42611090565b5097509350610631818a611469565b925061063d8385611475565b97506106498a83611168565b945050509295509295509295565b600080600080600061066a88888861148c565b93506106768885610e77565b929b969a5090985096509450505050565b6000806000806000610699888861046f565b929650909450925090506106ae8887866113b1565b9450939792965093509350565b60008060008060006106cc87610f9f565b90506107176106da88611029565b6040805160a0810182526003548152600454602082015260055491810191909152600654606082015260075460808201528391908990429061149d565b91965090945061072c9050876104aa876110e1565b925061074361073a88611029565b82908742611090565b5050506104bb8782611168565b60008060008061075f87610f9f565b905061076d81878742611346565b919a90995090975095505050505050565b60008060008060008061079088610f9f565b9050600061079d89611029565b6040805160a0810182526003548152600454602082015260055491810191909152600654606082015260075460808201529091506107e290839083908b90429061155f565b919850965094506107fb896107f68861164e565b611668565b935061080982828842611690565b5050506108168983611168565b925050509295509295909350565b600080600080600061083789898961148c565b9050610844898288610750565b9196509093509150808214610879578082604051636f5068bb60e11b8152600401610870929190613815565b60405180910390fd5b869350945094509450945094565b60008060008061089887878761148c565b91506108a48783610a57565b919990985092965094509092505050565b60008060008060006108c687610f9f565b905060006108d388611029565b6040805160a08101825260035481526004546020820152600554918101919091526006546060820152600754608082015290915061091890839083908a9042906116be565b91975090955061092d9050886105ec8861164e565b935061093b82828842611690565b5050506109488883611168565b9250505092959194509250565b600080600080600080600061096989610f9f565b90506109b76109778a611029565b6040805160a0810182526003548152600454602082015260055491810191909152600654606082015260075460808201528391908b9060009042906117af565b509197506109c891508a9050610f9f565b90506109df6109d68a611029565b82908842611690565b50955091506109fa6109f1838a6138c4565b82908842611346565b5090985061057991508a90506104aa8861164e565b6000806000806000610a2087610f9f565b9050610a2e6109d688611029565b5090955093506104af876104aa8861164e565b6000806000806000806000806105a88b8b610efd565b600080600080610a6686610f9f565b90506000610a7387611029565b9050610a8c610a8583602001516119b2565b82906119c1565b8251610a97906119b2565b610aa191906138d7565b8251610aac906119b2565b610ab690886138ea565b610ac09190613917565b9250610acc81846119c1565b9350610ae4610adb84886138c4565b83908642611346565b50909995985093965093945050505050565b6000806000806000610b0787610f9f565b90506000610b1488611029565b6040805160a081018252600354815260045460208201526005549181019190915260065460608201526007546080820152909150610b5990839083908a9042906119cd565b509096509450610b6c886105ec886110e1565b935061093b82828842611090565b600080600080600080610b8c88610f9f565b90506000610b9989611029565b6040805160a081018252600354815260045460208201526005549181019190915260065460608201526007546080820152909150610bde90839083908b904290611ac7565b91985096509450610bf2896107f6886110e1565b935061080982828842611090565b6000806000610c0e85610f9f565b9050610c1a8185611bb8565b90969095509350505050565b600080600080600080600080610c3b8a610f9f565b9050610c47818a611bb8565b8094508195505050896001600160a01b0316632f13b60c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb1919061392b565b15610ced57610cc983610cc38c611029565b90611bf3565b610cd390856138d7565b97506000965060009550670de0b6b3a76400009450610d2f565b610d02610cf98b611029565b82908542611090565b5097509150610d1182856138d7565b9750610d208a6104aa856110e1565b9550610d2c8a82611168565b94505b5092959891949750929550565b610d44613681565b610d4d82610f9f565b92915050565b6000806000806000806000610d698a8a8a61148c565b9150610d758a83610955565b949f939e50919c509a50985092965094509092505050565b600080600080600080600080610da28a610f9f565b9050610dae818a611bb8565b9093509150610dfc610dbf8b611029565b6040805160a08101825260035481526004546020820152600554918101919091526006546060820152600754608082015283919086904290611bff565b509097509550610e0c87836138d7565b9750610e1b8a6104aa8961164e565b9450610e32610e298b611029565b82908942611690565b505050610e3f8a82611168565b93505092959891949750929550565b6000806000610e5d8686610c00565b92509050610e6c8685836113b1565b925093509350939050565b6000806000806000610e8887610f9f565b9050610ed3610e9688611029565b6040805160a08101825260035481526004546020820152600554918101919091526006546060820152600754608082015283919089904290611bff565b509095509350610ee6876104aa8761164e565b9250610743610ef488611029565b82908742611690565b6000806000806000806000610f15896105ec8a61164e565b94506000610f228a610f9f565b90506000610f2f8b611029565b9050610f3d82828c42611690565b5098509450610f4c8186611cc5565b9350610f58848b6138c4565b9250610f648184611bf3565b9850610f708b83611168565b9550505092959891949750929550565b6000806000806000610f9388888861148c565b93506106768885610af6565b610fa7613681565b60405163794052f360e01b81526001600160a01b0383169063794052f390610fe79073888888888889758f76e7103c6cbf23abbf58f9469060040161394d565b61012060405180830381865afa158015611005573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4d91906139a3565b6040516314ae175360e11b8152600090309063295c2ea69061104f90859060040161394d565b602060405180830381865afa15801561106c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4d9190613a25565b6000806000806000806110ad8a8a6110a78b6110e1565b8a611cd2565b9250925092506110bc836119b2565b95506110c7826119b2565b94506110d2816119b2565b93505050509450945094915050565b60006110ec8261164e565b610d4d90600019613a3e565b6040516351a2b06360e11b8152600090309063a34560c6906111209086908690600401613a6e565b602060405180830381865afa15801561113d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111619190613a25565b9392505050565b604051632ee4dedf60e11b81526000903090635dc9bdbe906111209086908690600401613a87565b6040805160c08101825287815260208101879052908101859052606081018490526080810183905260a08101829052600090819081908190816111d48c8c8a611d65565b90508660400151600003611246576111fd87602001516111f8846000015184611e5f565b611f1d565b6020880181905260408301516112139190611f1d565b602088015261122187611f33565b8151604001516000036112465760405162461bcd60e51b815260040161087090613aa5565b60005b87606001518110156112f35760006112618983611fa1565b9050600080600080611287886000015189602001518a604001518b606001518b8a61203c565b50935093509350935061129f84848f608001516120c7565b156112b957939a5098509196509194506113399350505050565b8284116112d2576112cb8560016138d7565b8d526112e3565b6112dd6001866138c4565b60208e01525b5050505050806001019050611249565b5060405162461bcd60e51b815260206004820152601a60248201527914db1a5c1c1859d94e881054141493d617d15612105554d5115160321b6044820152606401610870565b9650965096509692505050565b60008060008060008060008061136e8c61135f8d61164e565b6113688d61164e565b8c61210f565b935093509350935061137f846119b2565b975061138a836119b2565b9650611395826119b2565b95506113a0816119b2565b945050505050945094509450949050565b60003063ed84175d6113c2866122d4565b6040516001600160e01b031960e084901b1681526001600160a01b039182166004820152908616602482015260448101859052606401602060405180830381865afa158015611415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114399190613a25565b949350505050565b60405163d1b087c960e01b8152600090309063d1b087c9906111209086908690600401613a6e565b60006111618383612343565b600081831015611486576000611161565b50900390565b60003063fea114716113c2866122d4565b60008080806114ad898988611d65565b905084604001516000036114db576114cd85602001516111f88b84611e5f565b60208601526114db85611f33565b60005b85606001518110156112f35760006114f68783611fa1565b90506000806115078d868e86612379565b50915091508a821061154257611522828c8b608001516123aa565b156115365791965094509250611554915050565b60208901839052611546565b8289525b5050508060010190506114de565b955095509592505050565b600080808061156f898988611d65565b905084604001516000036115b057845161158990886123cd565b8552602085015189516115a291906111f89084906123dc565b60208601526115b085611f33565b60005b85606001518110156112f35760006115cb8783611fa1565b90506000806115dc8d868e8661247b565b50909250905060006115ee8d84611cc5565b90508b811161162e57611606818d8c608001516124ad565b156116265761161581856138c4565b985092965094506115549350505050565b838a5261163f565b6116396001856138c4565b60208b01525b505050508060010190506115b3565b60006001600160ff1b0382111561166457600080fd5b5090565b604051630ac6aa6960e01b81526000903090630ac6aa69906111209086908690600401613a6e565b6000806000806000806116a78a8a6110a78b61164e565b9250925092506110bc6116b9846124db565b6119b2565b60008080806116ce898988611d65565b90508460400151600003611700576116f285602001516111f8838c600001516123dc565b602086015261170085611f33565b60005b85606001518110156112f357600061171b8783611fa1565b905060008061172c8d868e8661247b565b509092509050600061173e8d84611cc5565b9050600061175661174f83876138c4565b8f90611bf3565b90508c81106117915761176e818e8d608001516123aa565b156117855793985092965094506115549350505050565b60208b0185905261179f565b61179c8560016138d7565b8b525b5050505050806001019050611703565b6040805160c08101825287815260208101879052908101859052606081018490526080810183905260a08101829052600090819081908190816117f38c8c8a611d65565b90508160a001516040015160000361185f576118238260a00151602001516111f8838560000151600001516123dc565b60a083018051602001919091525161183a90611f33565b81516040015160000361185f5760405162461bcd60e51b815260040161087090613aa5565b60005b8260a00151606001518110156112f35760006118828460a0015183611fa1565b9050600080600061189d87600001518789602001518761247b565b92509250925086604001518311156118cd576118ba6001856138c4565b60a088015160200152506119aa92505050565b865151600090819081906118e29088906138c4565b9050600084878c60000151602001516118fb91906138d7565b61190591906138c4565b9050808b606001518961191891906138d7565b61192291906138ea565b925081878c6040015161193591906138c4565b61193f91906138ea565b9350505061195681838b60a00151608001516120c7565b156119715750939a5091985096509194506113399350505050565b81811161198e576119838660016138d7565b60a08a0151526119a3565b6119996001876138c4565b60a08a0151602001525b5050505050505b600101611862565b60008082121561166457600080fd5b600061116183836124e9565b60008080806119dd898988611d65565b90508460400151600003611a23578451611a00906119fb8a8a6119c1565b6123cd565b85526020850151611a15906111f88b84611e5f565b6020860152611a2385611f33565b60005b85606001518110156112f3576000611a3e8783611fa1565b9050600080611a4f8d868e86612379565b5090925090506000611a618d85611469565b90506000611a6f84836138c4565b90508c8111611aa657611a87818e8d608001516124ad565b15611a9e5750929750955091935061155492505050565b848b52611ab7565b611ab16001866138c4565b60208c01525b5050505050806001019050611a26565b6000808080611ad7898988611d65565b90508460400151600003611b14578451611af190886123cd565b85526020850151611b06906111f88b84611e5f565b6020860152611b1485611f33565b60005b85606001518110156112f3576000611b2f8783611fa1565b9050600080611b408d868e86612379565b5090925090506000611b528d846119c1565b90506000611b6082866138c4565b90508c8111611b9757611b78818e8d608001516124ad565b15611b8f5750975091955090935061155492505050565b848b52611ba8565b611ba26001866138c4565b60208c01525b5050505050806001019050611b17565b600080600080611bd086611bcb8761164e565b6124fe565b91509150611bdd826119b2565b9350611be8816119b2565b925050509250929050565b600061116183836125ca565b6000808080611c0f898988611d65565b90508460400151600003611c4157611c3385602001516111f8838c600001516123dc565b6020860152611c4185611f33565b60005b85606001518110156112f3576000611c5c8783611fa1565b9050600080611c6d8d868e8661247b565b50915091508a8211611ca657611c88828c8b608001516124ad565b15611c9e57919650909450909250611554915050565b828952611cb7565b611cb16001846138c4565b60208a01525b505050806001019050611c44565b60008261143981846125df565b6000806000611ce58760a0015185101590565b15611d035760405163b2094b5960e01b815260040160405180910390fd5b86518512611d29578651604051632185509b60e21b815261087091908790600401613815565b6000611d36888887611d65565b9050611d44888289896125f7565b91955093509150611d5a8882898988878b61274b565b509450945094915050565b611d906040518060800160405280600081526020016000815260200160008152602001600081525090565b60a08401518210611db45760405163b2094b5960e01b815260040160405180910390fd5b6000828560a00151611dc691906138c4565b9050611dd285826127dd565b82526020850151611de4908590612839565b602083015284511580611df957506020820151155b15611e20578451602083015160405163b1c4aefb60e01b8152610870929190600401613815565b611e3e85600001518661010001518460200151856000015185612870565b604083015260c0850151611e5290826128f1565b6060830152509392505050565b60008060009050600060018460200151611e7991906138c4565b90505b808214611edb5760006002611e9183856138d7565b611e9c9060016138d7565b611ea69190613917565b90506000611eb986886000015184612925565b1215611ed157611eca6001826138c4565b9150611ed5565b8092505b50611e7c565b84516020850151611f149184916111f89190611f0a90611efb9083613acd565b670d529ae9e860000090612a17565b6116b99190613af5565b95945050505050565b6000818310611f2c5781611161565b5090919050565b602081015181511180611f515750670de0b6b3a76400008160800151115b15611f9e5760405162461bcd60e51b815260206004820152601f60248201527f496e7465726e616c3a20494e56414c49445f415050524f585f504152414d53006044820152606401610870565b50565b600081158015611fb45750604083015115155b15611fc457506040820151610d4d565b6020830151835111611ff45760208301518351600291611fe3916138d7565b611fed9190613917565b9050610d4d565b60405162461bcd60e51b815260206004820152601d60248201527f536c6970706167653a2067756573734d696e203e2067756573734d61780000006044820152606401610870565b60008060008060006120508b888c89612379565b8d5192955090935091506000906120689088906138d7565b9050600082858e6020015161207d91906138c4565b61208791906138c4565b9050816120948b876138d7565b61209e91906138ea565b9650806120ab898d6138c4565b6120b591906138ea565b95505050965096509650965096915050565b6000836120e5846120e085670de0b6b3a76400006138c4565b612a3a565b111580156114395750612104836120e084670de0b6b3a76400006138d7565b909311159392505050565b600080808086158061211f575085155b1561213d576040516325daaec360e01b815260040160405180910390fd5b60a088015185106121615760405163b2094b5960e01b815260040160405180910390fd5b87604001516000036121a9576103e861218d6121886121836116b98a8c613a3e565b612a5a565b61164e565b6121979190613af5565b92506103e89350869150859050612244565b87516040890151600091906121be9089613a3e565b6121c89190613b1c565b9050600089602001518a604001518a6121e19190613a3e565b6121eb9190613b1c565b905080821215612220578194508792506122198a60400151868c602001516122139190613a3e565b90612aca565b9350612241565b80945088935061223e8a60400151868c600001516122139190613a3e565b92505b50505b600083131580612255575060008213155b80612261575060008113155b1561227f57604051631997ea8d60e31b815260040160405180910390fd5b81886020018181516122919190613acd565b9052508751819089906122a5908390613acd565b9052506122b28484613acd565b886040018181516122c39190613acd565b905250929791965094509092509050565b600080826001600160a01b0316632c8ce6bc6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123399190613b4a565b5090949350505050565b60008260018161235b670de0b6b3a7640000866138ea565b61236591906138d7565b61236f91906138c4565b6111619190613917565b60008080808080612397898961238e8a613b8c565b8d9291906125f7565b919c909b50909950975050505050505050565b60008284101580156114395750612104836120e084670de0b6b3a76400006138d7565b6000818311611f2c5781611161565b6000806124096124048560000151866040015187606001516123fe9190613af5565b90612a17565b612aed565b90506000612429612422670de0b6b3a764000084613acd565b8390612f02565b905060006124478660200151866124409190613acd565b8390612a17565b905060006124558287613af5565b90506103e8612466826103e76138ea565b6124709190613917565b979650505050505050565b6000808080808061248e8a8a8a8a6125f7565b9250925092508261249e90613b8c565b9a919950975095505050505050565b600082841115801561143957506124d0836120e084670de0b6b3a76400006138c4565b909310159392505050565b6000610d4d82600019613a3e565b6000670de0b6b3a764000061236f84846138ea565b60008082600003612522576040516325daaec360e01b815260040160405180910390fd5b604084015160208501516125369085613a3e565b6125409190613b1c565b60408501518551919350906125559085613a3e565b61255f9190613b1c565b90508115801561256d575080155b1561258b57604051631997ea8d60e31b815260040160405180910390fd5b604084015161259a9084612f28565b604085015283516125ab9082612f28565b845260208401516125bc9083612f28565b602090940193909352929050565b60008261236f670de0b6b3a7640000846138ea565b6000670de0b6b3a764000060018161235b86866138ea565b60008060008061261a8860000151886020015189600001518a6040015189612f6f565b9050600061263061262b8784612f02565b6124db565b6060890151909150600087131561269f57600061264d8483612f02565b9050670de0b6b3a764000081121561267b5760405163329e322960e21b815260048101829052602401610870565b61269761269083670de0b6b3a7640000613af5565b8490612a17565b9150506126cc565b6126c9816126b581670de0b6b3a7640000613af5565b6126bf9085613a3e565b61262b9190613b1c565b90505b600060646126dd8c60e0015161164e565b6126e79084613a3e565b6126f19190613b1c565b905060006126ff8385613af5565b905060008112612718576127138a82613020565b612722565b6127228a8261304d565b975061272e8a84613020565b965061273a8a83613020565b955050505050509450945094915050565b6000818860a0015161275d91906138c4565b885190915061276c9086612f28565b885261278661277b8486613acd565b60208a015190612f28565b6020890181905288516127ab9161279e908990612839565b895160408b01518561307a565b61010089018190526000036127d357604051635534d70f60e11b815260040160405180910390fd5b5050505050505050565b60006127e88261164e565b6127fa6121886201518061016d6138ea565b84608001516128099190613a3e565b6128139190613b1c565b905060008113610d4d57604051630e520c3b60e11b815260048101829052602401610870565b6000806000831261284b57600161284f565b6000195b905061286661218885612861866130cd565b6124e9565b6114399082613a3e565b60008061287d86846128f1565b9050670de0b6b3a76400008112156128ab5760405163329e322960e21b815260048101829052602401610870565b60006128c16128ba878a613acd565b8990612f02565b905060006128ce826130e4565b90506128da8187612f02565b6128e49084613af5565b9998505050505050505050565b6000806129036201518061016d6138ea565b61290d84866138ea565b6129179190613917565b90506114396124048261164e565b6000808285602001516129389190613af5565b905060006129468585613acd565b90506000821380156129585750600081135b6129995760405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a59081c1d151bd3585c9ad95d60721b6044820152606401610870565b60006129c76129a88484613a3e565b60208901516129b79089613acd565b6129c19088613a3e565b90612f02565b905060006129dd6129d88486612f02565b613133565b88519091506000906129f890670de0b6b3a764000090612f02565b9050612a08816123fe8486613af5565b89604001516128e49190613af5565b600080612a248385613a3e565b9050670de0b6b3a7640000815b05949350505050565b600080612a4783856138ea565b670de0b6b3a76400009004949350505050565b60006003821115612abb5750806000612a74600283613917565b612a7f9060016138d7565b90505b81811015612ab557905080600281612a9a8186613917565b612aa491906138d7565b612aae9190613917565b9050612a82565b50919050565b8115612ac5575060015b919050565b6000816001612ad98286613acd565b612ae39190613af5565b6111619190613b1c565b6000680238fd42c5cf03ffff198212158015612b12575068070c1cc73b00c800008213155b612b515760405162461bcd60e51b815260206004820152601060248201526f125b9d985b1a5908195e1c1bdb995b9d60821b6044820152606401610870565b6000821215612b8957612b6682600003612aed565b6a0c097ce7bc90715b34b9f160241b81612b8257612b82613901565b0592915050565b60006806f05b59d3b20000008312612bc757506806f05b59d3b1ffffff199091019072195e54c5dd42177f53a27172fa9ec63026282760241b612bfd565b6803782dace9d90000008312612bf957506803782dace9d8ffffff19909101906b1425982cf597cd205cef7380612bfd565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac620000008412612c4d5768ad78ebc5ac61ffffff199093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d6310000008412612c89576856bc75e2d630ffffff199093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b188000008412612cc357682b5e3af16b187fffff199093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c4000008412612cfd576815af1d78b58c3fffff199093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac62000008412612d3657680ad78ebc5ac61fffff199093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d631000008412612d6f5768056bc75e2d630fffff199093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b18800008412612da8576802b5e3af16b187ffff199093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c400008412612de15768015af1d78b58c3ffff199093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d63100000848402058502059695505050505050565b600080612f17670de0b6b3a764000085613a3e565b9050828181612a3157612a31613901565b600081831215612f655760405162461bcd60e51b81526020600482015260086024820152676e6567617469766560c01b6044820152606401610870565b6111618284613af5565b600080612f7c8784612f28565b90506000612f8d612422888a613acd565b9050670d529ae9e8600000811315612fc45780670d529ae9e8600000604051637e34684f60e11b8152600401610870929190613815565b6000612fcf826130e4565b905085612fdc8289612f02565b612fe69190613acd565b9350670de0b6b3a76400008412156130145760405163329e322960e21b815260048101859052602401610870565b50505095945050505050565b60008060008312613032576001613036565b6000195b905061286661218885613048866130cd565b6125ca565b6000806000831261305f576001613063565b6000195b905061286661218885613075866130cd565b612343565b60008061308b878787876000612f6f565b9050600061309b6116b983613133565b9050836130ad6201518061016d6138ea565b6130b790836138ea565b6130c19190613917565b98975050505050505050565b6000808213611664576130df82613b8c565b610d4d565b6000670de0b6b3a7640000820361310e5760405163a9c8b14d60e01b815260040160405180910390fd5b600061312c61312584670de0b6b3a7640000613af5565b8490612f02565b9050611161815b60008082136131745760405162461bcd60e51b815260206004820152600d60248201526c6f7574206f6620626f756e647360981b6044820152606401610870565b670c7d713b49da0000821380156131925750670f43fc2c04ee000082125b156131b657670de0b6b3a76400006131a9836131bf565b81612b8257612b82613901565b610d4d826132de565b670de0b6b3a7640000026000806a0c097ce7bc90715b34b9f160241b808401906ec097ce7bc90715b34b9f0fffffffff198501028161320057613200613901565b05905060006a0c097ce7bc90715b34b9f160241b82800205905081806a0c097ce7bc90715b34b9f160241b81840205915060038205016a0c097ce7bc90715b34b9f160241b82840205915060058205016a0c097ce7bc90715b34b9f160241b82840205915060078205016a0c097ce7bc90715b34b9f160241b82840205915060098205016a0c097ce7bc90715b34b9f160241b828402059150600b8205016a0c097ce7bc90715b34b9f160241b828402059150600d8205016a0c097ce7bc90715b34b9f160241b828402059150600f82050160020295945050505050565b6000670de0b6b3a764000082121561331f57613316826a0c097ce7bc90715b34b9f160241b8161331057613310613901565b056132de565b60000392915050565b6000775803bcc5cb9634ba4cfb2213f784019318ed4dcb6017880f60361b831261336a5772195e54c5dd42177f53a27172fa9ec63026282760241b830592506806f05b59d3b2000000015b6f8bcc0026baae9e45e470190267a230cf60191b83126133a1576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff008400083126133e9576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a7008312613424576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf850831261345b57693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e2831261349257690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d0383126134c75768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb4174612111083126134f257680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312613527576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f1775788937937831261355c576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b2866038312613590576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac83126135c4576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d6310000080860302816135ed576135ed613901565b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b60405180610120016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b6001600160a01b0381168114611f9e57600080fd5b600080604083850312156136fe57600080fd5b8235613709816136d6565b946020939093013593505050565b60008060006060848603121561372c57600080fd5b8335613737816136d6565b925060208401359150604084013561374e816136d6565b809150509250925092565b60008060006060848603121561376e57600080fd5b8335613779816136d6565b92506020840135613789816136d6565b929592945050506040919091013590565b6000806000606084860312156137af57600080fd5b83356137ba816136d6565b95602085013595506040909401359392505050565b600080600080608085870312156137e557600080fd5b84356137f0816136d6565b93506020850135613800816136d6565b93969395505050506040820135916060013590565b918252602082015260400190565b60006020828403121561383557600080fd5b8135611161816136d6565b8051825260208082015190830152604080820151908301526060808201516001600160a01b0316908301526080808201519083015260a0808201519083015260c0808201519083015260e0808201519083015261010090810151910152565b6101208101610d4d8284613840565b634e487b7160e01b600052601160045260246000fd5b81810381811115610d4d57610d4d6138ae565b80820180821115610d4d57610d4d6138ae565b8082028115828204841417610d4d57610d4d6138ae565b634e487b7160e01b600052601260045260246000fd5b60008261392657613926613901565b500490565b60006020828403121561393d57600080fd5b8151801515811461116157600080fd5b6001600160a01b0391909116815260200190565b60405161012081016001600160401b038111828210171561399257634e487b7160e01b600052604160045260246000fd5b60405290565b8051612ac5816136d6565b600061012082840312156139b657600080fd5b6139be613961565b8251815260208301516020820152604083015160408201526139e260608401613998565b60608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152508091505092915050565b600060208284031215613a3757600080fd5b5051919050565b80820260008212600160ff1b84141615613a5a57613a5a6138ae565b8181058314821517610d4d57610d4d6138ae565b6001600160a01b03929092168252602082015260400190565b6001600160a01b038316815261014081016111616020830184613840565b6020808252600e908201526d06e6f206578697374696e67206c760941b604082015260600190565b8082018281126000831280158216821582161715613aed57613aed6138ae565b505092915050565b8181036000831280158383131683831282161715613b1557613b156138ae565b5092915050565b600082613b2b57613b2b613901565b600160ff1b821460001984141615613b4557613b456138ae565b500590565b600080600060608486031215613b5f57600080fd5b8351613b6a816136d6565b6020850151909350613b7b816136d6565b604085015190925061374e816136d6565b6000600160ff1b8201613ba157613ba16138ae565b506000039056fea26469706673582212203a838e6353b6910c415462aaf69d3dfd61d2322201d4799cff45b6b0c329e2ac64736f6c63430008170033";

type ActionMarketCoreStaticConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ActionMarketCoreStaticConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ActionMarketCoreStatic__factory extends ContractFactory {
  constructor(...args: ActionMarketCoreStaticConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ActionMarketCoreStatic";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ActionMarketCoreStatic> {
    return super.deploy(overrides || {}) as Promise<ActionMarketCoreStatic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ActionMarketCoreStatic {
    return super.attach(address) as ActionMarketCoreStatic;
  }
  connect(signer: Signer): ActionMarketCoreStatic__factory {
    return super.connect(signer) as ActionMarketCoreStatic__factory;
  }
  static readonly contractName: "ActionMarketCoreStatic";
  public readonly contractName: "ActionMarketCoreStatic";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ActionMarketCoreStaticInterface {
    return new utils.Interface(_abi) as ActionMarketCoreStaticInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ActionMarketCoreStatic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ActionMarketCoreStatic;
  }
}
